-- MySQL dump 10.13  Distrib 5.7.23, for Linux (x86_64)
--
-- Host: LIUYA.mysql.pythonanywhere-services.com    Database: LIUYA$default
-- ------------------------------------------------------
-- Server version	5.6.40-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add permission',2,'add_permission'),(5,'Can change permission',2,'change_permission'),(6,'Can delete permission',2,'delete_permission'),(7,'Can add group',3,'add_group'),(8,'Can change group',3,'change_group'),(9,'Can delete group',3,'delete_group'),(10,'Can add user',4,'add_user'),(11,'Can change user',4,'change_user'),(12,'Can delete user',4,'delete_user'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add blog',7,'add_blog'),(20,'Can change blog',7,'change_blog'),(21,'Can delete blog',7,'delete_blog'),(22,'Can add blog_ type',8,'add_blog_type'),(23,'Can change blog_ type',8,'change_blog_type'),(24,'Can delete blog_ type',8,'delete_blog_type'),(25,'Can add read_ num',9,'add_read_num'),(26,'Can change read_ num',9,'change_read_num'),(27,'Can delete read_ num',9,'delete_read_num'),(28,'Can add read_ detail',10,'add_read_detail'),(29,'Can change read_ detail',10,'change_read_detail'),(30,'Can delete read_ detail',10,'delete_read_detail'),(31,'Can add comment',11,'add_comment'),(32,'Can change comment',11,'change_comment'),(33,'Can delete comment',11,'delete_comment');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$100000$7YeDchRJpEp0$3BNyc7QkSng4OSeBVsLFdTOE6qVh/0OJdsrYByyhxkk=','2018-12-06 03:32:31',1,'EVIC','呀','刘','bluebliss@foxmail.com',1,1,'2018-09-08 01:50:00'),(3,'pbkdf2_sha256$100000$vTcA66BXPjBg$XEfwrAI9d2GZXJN4Bxit1NzFJIMcRsN0hi5gCdoWbUg=','2018-11-27 05:13:56',1,'蠢猫sama','','','275831344@qq.com',1,1,'2018-10-20 14:15:00');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blog`
--

DROP TABLE IF EXISTS `blog_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `content` longtext NOT NULL,
  `created_time` datetime NOT NULL,
  `last_update_time` datetime NOT NULL,
  `author_id` int(11) NOT NULL,
  `blog_type_id` int(11) NOT NULL,
  `read_num` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `blog_blog_author_id_8791af69_fk_auth_user_id` (`author_id`),
  KEY `blog_blog_blog_type_id_de11bd65_fk_blog_blog_type_id` (`blog_type_id`),
  CONSTRAINT `blog_blog_author_id_8791af69_fk_auth_user_id` FOREIGN KEY (`author_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `blog_blog_blog_type_id_de11bd65_fk_blog_blog_type_id` FOREIGN KEY (`blog_type_id`) REFERENCES `blog_blog_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blog`
--

LOCK TABLES `blog_blog` WRITE;
/*!40000 ALTER TABLE `blog_blog` DISABLE KEYS */;
INSERT INTO `blog_blog` VALUES (1,'夸张的讲，断网的这几天是我效率最高的一段时间','<h1>真希望2018早点过去</h1>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/08/31/cvbjyd.JPG\" style=\"height:195px; width:400px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/08/31/2.JPG\" style=\"height:192px; width:400px\" /></p>','2018-09-08 01:56:07','2018-09-15 16:19:05',1,5,0),(2,'数量统计还有问题','<p>当记录存在以后，无法更新，无法增加一条博客在当天的浏览记录</p>','2018-09-08 01:57:32','2018-11-14 11:31:30',1,7,0),(3,'关于DjangoForm的css样式','<h2>怎么给DjangoForm定制样式，让人头秃</h2>','2018-09-08 10:14:18','2018-11-14 11:31:49',1,7,0),(4,'登陆跳转重定向回不到登陆前页面','<h2><span class=\"marker\">request.GET.get(&#39;from&#39;)结果为None或者2、3</span></h2>','2018-09-09 00:56:37','2018-11-14 11:32:04',1,7,0),(5,'缓存没用到','<h3>缓存机制没有用到</h3>','2018-09-09 01:08:46','2018-11-14 11:32:26',1,7,0),(6,'exists()的作用是什么','<p>exists()的用法</p>','2018-09-09 14:07:05','2018-11-14 11:32:47',1,8,0),(7,'登陆注册界面要改呀','<h2>还有打开浏览器自动缩小的毛病也要改</h2>','2018-09-10 03:35:26','2018-11-14 11:33:07',1,7,0),(8,'登出方法设计','<h2>只能登录不能登出，超级管理员还可以进admin登出，普通用户只能重启本地服务</h2>','2018-09-10 08:02:22','2018-11-14 11:33:26',1,7,0),(9,'model_class()方法详解','<h2>还是对ContentType不熟悉，像<span class=\"marker\">get_for_model(),&nbsp; &nbsp; &nbsp; ContentType.objects.get()</span></h2>','2018-09-10 09:13:31','2018-11-14 11:31:11',1,7,0),(10,'strip()的用法','<div>text = request.POST.get(&#39;comment_text&#39;,&#39;&#39;).strip()</div>','2018-09-10 09:50:33','2018-11-14 11:30:44',1,8,0),(11,'在Pythonanywhere上部署django','<h3>一、部署前准备 &nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<h5>&nbsp; &nbsp; 1）网站注册&nbsp;(<a href=\"http://www.pythonanywhere.com\">www.pythonanywhere.com</a>)&nbsp;</h5>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 在Pythonanywhere的<a href=\"http://www.pythonanywhere.com\">官网</a>上进行注册</p>\r\n\r\n<h5>&nbsp; &nbsp; 2）生成依赖库文件</h5>\r\n\r\n<h5>&nbsp; &nbsp; 3）项目文件打包</h5>\r\n\r\n<h3>二、开始部署 &nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<h5>1）创建虚拟环境 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>2）上传文件 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>3）解压安装依赖库文件 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>4）打开web选项卡，新建一个新的web app &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>5）配置文件地址 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>6）修改wsgi文件 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>7）设置settings文件的ALLOWED_HOSTS &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>8）收集静态文件 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>9）重启服务器，尝试运行&nbsp;</h5>\r\n\r\n<h3>三、拓展 &nbsp;&nbsp;</h3>\r\n\r\n<h5>1、数据库 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h3>(1)导出本地数据库(可使用navicat直接导出) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<p>mysqldump -uroot -p &lt;本地数据库名&gt; &gt; 保存文件名.sql &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<h3>(2)初始化Pythonanywhere上的MySQL数据库 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<h3>(3)上传本地数据库文件 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<h3>(4)修改配置settings文件 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<p>将DATABASES改成如下样式 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>DATABASES = { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;default&#39;: { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;, &nbsp;# 或者使用 mysql.connector.django &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;NAME&#39;: &#39;zhangsan$dbname&#39;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;USER&#39;: &#39;zhangsan&#39;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;PASSWORD&#39;: &#39;123456&#39;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;HOST&#39;:&#39;zhangsan.mysql.pythonanywhere-services.com&#39;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&#39;PORT&#39;:&#39;3306&#39;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>其中要修改的是NAME：是你的pythonanywhere用户名+$+数据库名 &nbsp; USER是你的pythonanywhere用户名 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>HOST是你的pythonanywhere用户名+.mysql.pythonanywhere-services.com &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<h3>（5）文件迁移，在数据库中生成表&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</h3>\r\n\r\n<p>$ python manage.py makemigrations &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>$ python&nbsp;manage.py migrate &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>如果你使用的是pymysql驱动那么要记得init.py里面加上代码 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>import pymysql &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>pymysql.install_as_MySQLdb() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<h3>(6)进入pythonanywhere的mysql console， &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h3>\r\n\r\n<p>mysql&gt; create database abc;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 创建数据库 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>mysql&gt; use abc;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 使用已创建的数据库&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>mysql&gt; set names utf8;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# 设置编码 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>mysql&gt; source /home/abc/abc.sql &nbsp;# 导入备份数据库 &nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<h5>2、设置密码保护 &nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<h5>3、一些常见的问题 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h5>\r\n\r\n<p>当打开多个控制台提示没有权限再打开新的控制台时，可以ctrl+C退出当前命令，ctrl+D关闭控制台 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>报错信息查看</p>','2018-09-11 03:37:29','2018-11-14 11:33:46',1,7,0),(12,'运维第一课：Linux目录结构','<h2>linux目录结构</h2>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Bin</strong></span>：全称binary，含义是二进制，该目录中存储的都是一些二进制文件，都是可以被直接运行的。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Dev</strong></span>：该目录中主要存储的是外接设备，例如盘、其他的光盘等等，在其中的外接设备是不能直接被使用的，需要挂载</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Etc</strong></span>：该目录主要是存储配置文件。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Home</strong></span>：表示&ldquo;家&rdquo;，表示除了root用户以外其他用户的家目录，类似于windows下的User/用户目录。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Proc</strong></span>：process，表示进程，该目录中存储的是linux运行时候的进程。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Root</strong></span>：该目录是root用户的家目录。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Sbin</strong></span>：全称是super binary，该目录也是存储一些可以被执行的二进制文件，但是必须得有super权限才可以执行。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Tmp</strong></span>：temporary，存放系统运行的临时文件。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Usr</strong></span>：存放的用户自己安装的软件。类似于windows下的program files。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Var</strong></span>：存放的程序或系统日志。</p>\r\n\r\n<p><br />\r\n<span style=\"color:#e74c3c\"><strong>Mnt</strong></span>：外接设备挂载。</p>\r\n\r\n<p>&nbsp;</p>','2018-09-12 09:52:40','2018-09-14 00:28:06',1,3,0),(13,'【转载】Linux下可用的QQ','<h1>linux下的qq使用</h1>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下载地址在这<a href=\"http://yun.tzmm.com.cn/index.php/s/XRbfi6aOIjv5gwj\" rel=\"nofollow\" target=\"_blank\">http://yun.tzmm.com.cn/index.php/s/XRbfi6aOIjv5gwj</a></p>\r\n\r\n<p>Appimage包不用做什么别的处理，安装啥的都不需要。。找到文件所在目录，终端中修改一下文件的权限</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code>chmod a+x QQ-20171129-x86_64.AppImage </code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>然后就可以直接运行了</p>\r\n\r\n<pre>\r\n<code>./QQ-20171129-x86_64.AppImage </code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>linux下使用还是会有些许bug.不过正常使用还是没啥问题</p>\r\n\r\n<p><a href=\"https://blog.csdn.net/hustcw98/article/details/79323024\">原文地址</a></p>','2018-09-12 10:34:51','2018-09-13 01:50:03',1,4,0),(14,'运维第二课：Linux基础指令','<h1>Linux基础命令</h1>\r\n\r\n<h3>1、ls</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp;#ls [参数] [路径]</div>\r\n\r\n<p>参数：</p>\r\n\r\n<p>-l 表示list，以详细的列表形式展示（包括权限、所属者等等）</p>\r\n\r\n<p>-a 表示显示所有的文件/文件夹（包含隐藏文件）</p>\r\n\r\n<p>-lh 列出指定路径下的所有文件/文件夹的名称，以列表的形式显示且在显示文档大小的时候以可读性较高的形式显示</p>\r\n\r\n<p>--在详细列表展示中，列表的第一列字符表示文档的类型，其中&ldquo;-&rdquo;表示改行对应的文档类型为文件，&ldquo;d&rdquo;表示改行文档对应的文件类型为文件夹。</p>\r\n\r\n<p>--Linux中隐藏文件一般以&ldquo;.&rdquo;开头 --ls列出的结果颜色说明，其中蓝色的名称表示文件夹，黑色的表示文件，绿色的表示拥有所有权限</p>\r\n\r\n<hr />\r\n<h3>2、pwd （print working directory，打印当前工作目录）</h3>\r\n\r\n<hr />\r\n<h3>3、cd （change directory，切换目录）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #cd 路径</div>\r\n\r\n<p>--在Linux中，&ldquo;~&rdquo;表示当前用户的家目录</p>\r\n\r\n<hr />\r\n<h3>4、mkdir （make directory，创建目录）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #mkdir [-p] 路径1 [路径2，路径3...]</div>\r\n\r\n<p>-p 一次性创建多层目录</p>\r\n\r\n<hr />\r\n<h3>5、touch （创建文件）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #touch 文件路径1 [文件路径2]</div>\r\n\r\n<hr />\r\n<h3>6、cp （copy）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #copy [-r] 被复制的文档路径 文档被复制到的路径</div>\r\n\r\n<p>-r 递归复制，使用cp命令进行文件夹复制操作时需要添加选项&ldquo;-r&rdquo;，否则目录将被忽略</p>\r\n\r\n<p>--可重命名</p>\r\n\r\n<hr />\r\n<h3>7、mv （move，移动）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #mv 被移动的文档路径 文档被移动到的路径</div>\r\n\r\n<p>--在Linux中重命名的命令也是mv，语法和移动语法一样</p>\r\n\r\n<hr />\r\n<h3>8、rm （remove，移除）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #rm [选项] 要移除的文档</div>\r\n\r\n<p>-f force（强制），在删除时不需要额外的确认 -r 表示递归，在删除文件夹时与f连用</p>\r\n\r\n<p>--在删除多个有同样特性的文件时可以使用通配符&ldquo;*&rdquo;，即rm -f Linux*删除所有Linux开头的文档</p>\r\n\r\n<hr />\r\n<h3>9、vim （一款文本编辑器）</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #vim 要打开的文件路径（文件可以不存在）</div>\r\n\r\n<p>--退出打开的文件时，在没有按下其他键的时候，按下shift+&ldquo;：&rdquo;，输入q，按下回车即可退出</p>\r\n\r\n<hr />\r\n<h3>10、输出重定向</h3>\r\n\r\n<p>一般命令的输出都会显示在终端中，有些时候需要将一些命令的执行结果保存到文件中进行后续的分析或者统计，这时候就需要用到输出重定向</p>\r\n\r\n<p>&gt; ：覆盖输出，会覆盖掉原先的文件内容</p>\r\n\r\n<p>&gt;&gt; ：追加输出，会在原先的文件内容末尾追加输出</p>\r\n\r\n<hr />\r\n<h3>11、cat</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #cat 要打开的文件路径</div>\r\n\r\n<p>--在终端中直接打开一个文件</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp; &nbsp; #cat 待合并的文件路径1 待合并的文件路径2 ... 文件n &gt; 合并之后的文件路径</div>\r\n\r\n<p>--对多个文件进行合并（配合输出重定向使用）</p>\r\n\r\n<p>&nbsp;</p>','2018-09-13 01:26:09','2018-09-13 14:12:36',1,3,0),(15,'接触ckeditor个人遇到的一些问题','<h3>有时间学习一下定制或者找一下其他的富文本编辑器</h3>\r\n\r\n<hr />\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>复制文字进来从头到尾一个p标签不好改格式</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>字体大小没办法自定义</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>行间距有时候很奇怪</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>改颜色每次都要重新点击，不然就默认的黑色</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>不太懂锚点链接的含义</p>\r\n\r\n<hr />\r\n<p>&nbsp;</p>','2018-09-13 02:16:08','2018-09-13 02:16:46',1,2,0),(16,'Linux命令大全','<p>1、<a href=\"http://man.linuxde.net/\">Linux命令大全（http://man.linuxde.net/）</a></p>\r\n\r\n<hr />\r\n<p>&nbsp;</p>','2018-09-13 03:32:37','2018-09-13 03:32:37',1,4,0),(17,'百度云网盘PanDownload','<p>有机会可以研究一下<a href=\"http://pandownload.com/\">PanDownload</a></p>','2018-09-13 06:58:25','2018-09-13 06:58:25',1,4,0),(18,'运维第三课：Linux进阶指令','<h1>Linux进阶命令</h1>\r\n\r\n<h3>1、df</h3>\r\n\r\n<p>#df -h</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">--</span></strong>以较高可读性的形式显示磁盘空间大小</p>\r\n\r\n<hr />\r\n<h3>2、free</h3>\r\n\r\n<p>#free -m</p>\r\n\r\n<p>-m 表示以mb为单位查看内存的使用情况，也可用-G，但单位过大一般不用</p>\r\n\r\n<hr />\r\n<h3>3、head/tail</h3>\r\n\r\n<p>#head/tail -n 要查看的文件路径</p>\r\n\r\n<p>--n为任意正整数，不加n的时候，head默认查看文件的前10行，tail默认查看文件的末10行</p>\r\n\r\n<hr />\r\n<h3>4、tail</h3>\r\n\r\n<p>#tail -f 文件路径</p>\r\n\r\n<p>-f 可以查看一个文件的动态变化，变化的内容不能是用户手动加的，该命令一般用来查看日志</p>\r\n\r\n<hr />\r\n<h3>5、less</h3>\r\n\r\n<p>#less 需要查看的文件路径</p>\r\n\r\n<p>--查看文件，以较少的内容进行输出，按下辅助功能键（数字+回车、空格键+上下方向键）查看更多</p>\r\n\r\n<hr />\r\n<h3>6、wc</h3>\r\n\r\n<p>#wc -lwc 需要统计的文件路径</p>\r\n\r\n<p>--统计文件内容信息（包含行数、单词数和字节数）</p>\r\n\r\n<p>-l 表示lines，行数</p>\r\n\r\n<p>-w 表示words，单词数</p>\r\n\r\n<p>-c 表示byte，字节数</p>\r\n\r\n<hr />\r\n<h3>7、date</h3>\r\n\r\n<p>#date</p>\r\n\r\n<p>#date +%F （等价于#date &quot;+%Y-%m-%d&quot;）</p>\r\n\r\n<p>#date &ldquo;+%F %T&rdquo; （等价于#date &quot;+%Y-%m-%d %H:%M:%S&quot;）</p>\r\n\r\n<p>-d &lt;字符串&gt;：显示字符串所指的日期与时间。字符串前后必须加上双引号；字符串可是+-day、mouth、year</p>\r\n\r\n<p>-s &lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号；</p>\r\n\r\n<p>--CST UCT GMT</p>\r\n\r\n<hr />\r\n<h3>8、cal</h3>\r\n\r\n<p>#cal （等价于#cal -1）输出本月日历</p>\r\n\r\n<p>#cal -3 输出上月、本月加下月的日历</p>\r\n\r\n<p>#cal -y [年份] 输出对应年份的日历</p>\r\n\r\n<hr />\r\n<h3>9、clear/ctrl+L</h3>\r\n\r\n<p>#clear 或者快捷键ctrl+L</p>\r\n\r\n<p>--清除屏幕终端的信息，可上翻页查看，在Windows下为cls，不可上翻</p>\r\n\r\n<hr />\r\n<h3>10、管道</h3>\r\n\r\n<p>管道符&quot;|&quot;，管道一般用于过滤、特殊、扩展处理。</p>\r\n\r\n<p>grep：主要用于过滤</p>\r\n\r\n<p>#ls /|grep y 列出根目录下名称带有y的文档</p>\r\n\r\n<p>&nbsp;</p>','2018-09-13 13:03:24','2018-09-13 13:04:42',1,3,0),(19,'运维第四课：Linux高级命令','<h1>Linux高级指令</h1>\r\n\r\n<h3>1、hostname</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#hostname [-f]</div>\r\n\r\n<p>-f 表示输出当前主机名中的FQDN（全限定域名），不加参数表示输出完整的主机名</p>\r\n\r\n<hr />\r\n<h3>2、id</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#id [用户名]</div>\r\n\r\n<p>--默认显示当前执行该命令的用户的基本情况，加用户名时显示指定用户信息（用户id、用户组id、附加组id）</p>\r\n\r\n<hr />\r\n<h3>3、whoami</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#whoani</div>\r\n\r\n<p>--显示当前登陆的用户名，一般用于shell脚本</p>\r\n\r\n<hr />\r\n<h3>4、ps -ef</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#ps [-ef]</div>\r\n\r\n<p>--主要是查看服务器的进程信息</p>\r\n\r\n<p>-e 等同于&ldquo;-A&rdquo;，表示列出全部的进程</p>\r\n\r\n<p>-f 表示显示UID,PPIP,C与STIME栏位。（显示全字段）</p>\r\n\r\n<p>--UID:该进程执行的用户id</p>\r\n\r\n<p>--PID：进程id</p>\r\n\r\n<p>--PPID：该进程的父级进程id，如果一个进程的父级进程找不到，该程序的进程称之为僵尸进程</p>\r\n\r\n<p>--C：CPU的占有率，其形式是百分数</p>\r\n\r\n<p>--STIME：进程的启动时间</p>\r\n\r\n<p>--TTY：终端设备，发起该进程的设备识别符号，如果显示&ldquo;？&rdquo;则表示该进程并不是由终端设备发起</p>\r\n\r\n<p>--TIME：进程的执行时间</p>\r\n\r\n<p>--CMD：该进程的名称或对应的路径</p>\r\n\r\n<hr />\r\n<h3>5、top</h3>\r\n\r\n<p>--进入命令#top（动态显示），退出命令：按下q键</p>\r\n\r\n<p>--PR：优先级</p>\r\n\r\n<p>--VIRT：虚拟内存</p>\r\n\r\n<p>--RES：常驻内存</p>\r\n\r\n<p>--SHR：共享内存</p>\r\n\r\n<p>--S：表示进行的状态（其中S表示Sleeping，R表示Run）</p>\r\n\r\n<p>--%CPU：表示CPU的占用百分比</p>\r\n\r\n<p>--%MEM：表示内存的占用百分比</p>\r\n\r\n<p>--COMMAND:CMD，进程的名称或者路径</p>\r\n\r\n<p>--在运行top的时候，可以按下快捷键调整数据显示：</p>\r\n\r\n<p>M：表示讲结果按照内存（MEM）从高到低降序排列</p>\r\n\r\n<p>P：表示讲结果按照CPU使用率从高到低进行降序排列</p>\r\n\r\n<p>1：当服务器拥有多个CPU的时候可以使用&ldquo;1&rdquo;快捷键来切换是否展示显示各个cpu的详细信息</p>\r\n\r\n<hr />\r\n<h3>6、du -sh</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#du [-sh]</div>\r\n\r\n<p>--查看目录的真实大小</p>\r\n\r\n<p>-s summaries。只显示汇总的大小</p>\r\n\r\n<p>-h 表示以较高可读性的形式进行展示</p>\r\n\r\n<hr />\r\n<h3>7、find find详解</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#find 路径范围 选项 选项的值</div>\r\n\r\n<p>-name：按照文档名称进行搜索（支持模糊搜索，iname忽略大小写搜索）</p>\r\n\r\n<p>-type：按照文档类型搜索（f表示文件，d表示文件夹）</p>\r\n\r\n<hr />\r\n<h3>8、service</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#service 服务名 start/stop/restart</div>\r\n\r\n<p>--用于控制一些软件的服务启动/停止/重启</p>\r\n\r\n<hr />\r\n<h3>9、kill/killall</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p>#kill 进程PID</p>\r\n\r\n<p>#killall 进程名称</p>\r\n</div>\r\n\r\n<hr />\r\n<h3>10、ifconfig</h3>\r\n\r\n<p>--配置和显示Linux内核中网络接口的网络参数</p>\r\n\r\n<p>--eth0表示第一块网卡，其中HWaddr表示网卡的物理地址</p>\r\n\r\n<p>--inet addr用来表示网卡的IP地址</p>\r\n\r\n<p>--lo是表示主机的回环地址，这个一般是用来测试一个网络程序，但又不想让局域网或外网的用户能够查看，只能在此台主机上运行和查看所</p>\r\n\r\n<p>用的网络接口。</p>\r\n\r\n<hr />\r\n<h3>11、reboot</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">--#reboot 重新启动计算机</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">--#reboot -w 模拟重启，但是并不重新启动（只写关机和开机的日志信息）</div>\r\n\r\n<hr />\r\n<h3>12、shutdown</h3>\r\n\r\n<p>--#shutdown -h now/时间点 &quot;关机提示&quot;</p>\r\n\r\n<p>--针对CentOS7.x之前的版本，ctrl+c</p>\r\n\r\n<p>--针对CentOS7.x（包含）之后的版本：#shutdown -c</p>\r\n\r\n<p>--关机命令：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#init0</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#halt</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#poweroff</div>\r\n\r\n<hr />\r\n<h3>13、uptime</h3>\r\n\r\n<p>--#uptime 能够打印系统总共运行了多长时间和系统的平均负载。uptime命令可以显示的信息显示依次为：现在时间、系统已经运行了</p>\r\n\r\n<p>多长时间、目前有多少登陆用户、系统在过去的1分钟、5分钟和15分钟内的平均负载。</p>\r\n\r\n<p>--Windows systeminfo包含有运行时间</p>\r\n\r\n<hr />\r\n<h3>14、uname</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#uname -a</div>\r\n\r\n<p>--获取比较详细的操作系统信息</p>\r\n\r\n<hr />\r\n<h3>15、netstart -tnlp</h3>\r\n\r\n<p>--查看网络连接状态，选项说明：</p>\r\n\r\n<p>-t：表示只列出tcp协议的链接</p>\r\n\r\n<p>-n：表示讲地址转换为ip地址，讲协议转化为端口号显示</p>\r\n\r\n<p>-l：表示过滤出&ldquo;state（状态）&rdquo;列中值为LISTEN（监听）的连接</p>\r\n\r\n<p>-p：表示显示发起连接的进程PID和进程名称</p>\r\n\r\n<hr />\r\n<h3>16、man</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">#man 命令</div>\r\n\r\n<p>--manual，手册，退出按q</p>\r\n\r\n<p>&nbsp;</p>','2018-09-13 13:33:43','2018-09-13 14:11:28',1,3,0),(20,'今日分的《岁月神偷》','<p>太久没动过笔，不太会写东西了，得好好挣钱呀</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><span style=\"color:#e74c3c\">&ldquo;鞋字半边难(難)，亦有半边佳; 一步难，一步佳;难一步，佳一步。&rdquo;</span></div>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/09/16/vevcrobkrvffwma.jpg\" style=\"height:227px; width:400px\" /></p>\r\n\r\n<p>选了一张不太难看的图，也别让生活太难看</p>','2018-09-15 16:11:39','2018-09-15 16:18:39',1,5,0),(21,'做人还是先有自己再去和别人接触吧','<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">我觉得不管人怎么样，做人还是首先得有自己，自己照顾自己，自己能处理好自己的基本，</div>\r\n\r\n<p>很烦，不写了</p>','2018-09-17 11:59:27','2018-09-28 13:21:21',1,5,0),(22,'九月份来深圳的补充','<h3>20180907 五</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp;&nbsp; &nbsp;我一直很沮丧一个事情，我和她这样关系的两个人，分居两地，情感炽烈，联系淡薄，每天晚上十点，我会关机睡觉，我们所有的联系就在于我轻触了一下那个飞机的按钮就消失一空。<br />\r\n&nbsp;&nbsp; &nbsp;所有的遗憾都类似于今天我们四个人的相互猜忌与误解，纯粹的关系里面掺杂的越多，涉及越广，崩塌的越快<br />\r\n&nbsp;&nbsp; &nbsp;住嘴吧，把想法变成目标</div>\r\n\r\n<h3>20180910 &nbsp;一</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp;&nbsp; &nbsp;还是不想变得庸常吧，觉得前两天说不想做精英的想法还是太咸太闲的原因，<br />\r\n&nbsp;&nbsp; &nbsp;大概谁都会低迷，昨天我基本什么都没做，就一直在想这想那的，我也不想学代码，我也不想每天敲敲敲，敲一堆bug，工作也找不到，还要手写bug，但是有别的更好的选择吗，我希望我女朋友起码是一个独立的人</div>\r\n\r\n<h3>20180911 二</h3>\r\n\r\n<p>&nbsp;&nbsp; <strong>&nbsp;努力可以对抗庸常</strong></p>\r\n\r\n<h3>20180912 三</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp;&nbsp; &nbsp;出来之后看到和听到的最多的一个词就是拼命，好像最不值钱的就是命了</div>\r\n\r\n<h3>20180917 一</h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">&nbsp;&nbsp; &nbsp;接下来创造一个能打怪猎环境，需要三个要素，时间、地方和机器<br />\r\n&nbsp;&nbsp; &nbsp;分别需要空闲的时间段，钱和钱，最好的办法就是去工作，有钱时间也会固定<br />\r\n&nbsp;&nbsp; &nbsp;接下来需要解决的就是工作的方向</div>','2018-09-17 12:01:35','2018-09-30 09:35:49',1,5,0),(23,'字典按valve将key分组','<h1>问题：有B1，B2表，按B1分组最后得到list<!--StartFragment --></h1>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/09/28/tim20180928205729.png\" style=\"height:294px; width:300px\" /></p>\r\n\r\n<p><code>解决代码：</code></p>\r\n\r\n<pre>\r\n\r\n<code>B1 = [1, 1, 1, 2, 2, 2, 3, 3]\r\nB2 = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;I&#39;, &#39;J&#39;]\r\n\r\ndic1 = {}\r\ndics = dict(zip(B2, B1))  # 将两个列表构建成一个字典{&#39;A&#39;: 1, &#39;B&#39;: 1, &#39;C&#39;: 1, &#39;D&#39;: 2, &#39;E&#39;: 2, &#39;F&#39;: 2, &#39;I&#39;: 3, &#39;J&#39;: 3}\r\nB11 = list(set(B1))  # B1列表去重\r\n\r\n# 将去重后的值做为key建立value为空的字典\r\nfor i in B11:\r\n    dic1[i] = []\r\n\r\n# 然后将dics的key丢到对应value的空列表下面   如果对应value的列表不存在就创建再添加\r\nfor k, v in dics.items():\r\n    if v in dic1.keys():\r\n        dic1[v].append(k)\r\n    else:\r\n        dic1[v] = []\r\n        dic1[v].append(k)\r\n\r\n# 最后构建得到{1: [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;], 2: [&#39;D&#39;, &#39;E&#39;, &#39;F&#39;], 3: [&#39;I&#39;, &#39;J&#39;]}\r\nfor key in dic1.keys():\r\n    print(dic1[key])\r\n</code>\r\n</pre>','2018-09-28 13:00:12','2018-09-28 13:06:03',1,2,0),(24,'单线程定向爬虫入门','<pre>\r\n\r\n环境：Widows，Python3.6.5\r\n软件：PyCharm\r\n一、正则表达式常用符号与方法\r\n    1）、常用符号\r\n        . ：匹配任意字符，换行符\\n除外\r\n        * :匹配前一个字符0次或无限次\r\n        ? :匹配前一个字符0次或1次\r\n        .* :贪心算法\r\n        .*? :非贪心算法\r\n        () :括号内的数据作为结果返回\r\n    2）、常用方法\r\n        &bull; findall：匹配所有符合规律的内容，返回包含结果的列表\r\n        &bull; search：匹配并提取第一个符合规律的内容，返回一个正则表达式对象（object）\r\n        &bull; sub：替换符合规律的额内容，返回替换后的值\r\n    3）、常用技巧\r\n        &bull; 使用(.*?)匹配任意字符串\r\n        &bull; 使用/d+匹配纯数字\r\n        &bull; 使用re.S参数使&rdquo;.&rdquo;能匹配换行符\\n\r\n        &bull; 使用sub实现换页功能\r\n\r\n    示例：\r\n\r\n二、requests获取网页源代码\r\n    &bull; 直接获取源代码\r\n    &bull; 修改http头获取源代码\r\n    &bull; requests表单提交\r\n\r\n三、其他相关\r\n    &bull; Python中的&rdquo;\\&rdquo;与&rdquo;/&rdquo;\r\n    &bull; I/O\r\n\r\n四、实例\r\n</pre>','2018-09-28 13:51:09','2018-09-28 13:51:29',1,1,0),(25,'Python的地址引用问题','<p><img alt=\"\" src=\"/media/upload/2018/09/29/tim20180929102914.png\" style=\"height:297px; width:600px\" /></p>\r\n\r\n<p>这里lists传进来的是一个空列表，用来接受字典的值，infos是一段初步处理过的HTML片段，其余部分都没有问题</p>\r\n\r\n<p>但在lists输出时，列表所有的项都变成了本来该是列表的最后一项？？！</p>\r\n\r\n<hr />\r\n<h3><span style=\"color:#e74c3c\">解决方法：</span></h3>\r\n\r\n<p>将新建空字典dic = {}放到循环内</p>\r\n\r\n<h3><span style=\"color:#e74c3c\">原因分析：</span><!--StartFragment --></h3>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">我的想法是&nbsp;&nbsp;</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">第一次我生成一个字典A，然后我把A加到list里面，等到我下一次赋值&nbsp;&nbsp;&nbsp;</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">虽然我只有一个字典（不就是A=B嘛）&nbsp;</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">但是我这个时候我的list[0]=A&nbsp;&nbsp;&nbsp;</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">再append，不就该是list[1]=B嘛&nbsp;&nbsp;&nbsp;</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">他为什么会改变我list[0]的值呢</div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">\r\n<p><strong><span style=\"color:#e67e22\">实际上，我就只生成一个字典后面赋值就把前面的覆盖了，我放到列表里的不是一个新的字典&nbsp;而是原字典的地址的引用</span></strong></p>\r\n</div>','2018-09-29 02:35:51','2018-11-14 11:30:09',1,8,0),(26,'多层创建文件路径','<h4>Python对文件的操作需要调用os模块，使用相关函数即可实现目录的创建。主要涉及三个函数：</h4>\r\n\r\n<h5>1、os.path.exists(path)&nbsp;判断一个目录是否存在</h5>\r\n\r\n<h5>2、os.makedirs(path)&nbsp;多层创建目录</h5>\r\n\r\n<h5>3、os.mkdir(path)&nbsp;创建目录</h5>\r\n\r\n<hr />\r\n<p><code>def</code>&nbsp;<code>mkdir(path):</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;引入模块</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>import</code>&nbsp;<code>os</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;去除首位空格</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>path</code><code>=</code><code>path.strip()</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;</code>&nbsp;</p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;去除尾部&nbsp;\\&nbsp;符号</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>path</code><code>=</code><code>path.rstrip(</code><code>&quot;\\\\&quot;</code><code>)</code></p>\r\n\r\n<p><code>&nbsp;</code>&nbsp;</p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;判断路径是否存在</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;存在&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;True</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;不存在&nbsp;&nbsp;&nbsp;False</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>isExists</code><code>=</code><code>os.path.exists(path)</code></p>\r\n\r\n<p><code>&nbsp;</code>&nbsp;</p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;判断结果</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code>&nbsp;<code>not</code>&nbsp;<code>isExists:</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;如果不存在则创建目录</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>　</code><code>#&nbsp;创建目录操作函数&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>　os.makedirs(path)&nbsp;&nbsp;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code><code>(path</code><code>+</code><code>&#39;&nbsp;创建成功&#39;</code><code>)</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>True</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>else</code><code>:</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>#&nbsp;如果目录存在则不创建，并提示目录已存在</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code><code>(path</code><code>+</code><code>&#39;&nbsp;目录已存在&#39;</code><code>)</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code>&nbsp;<code>False</code></p>\r\n\r\n<p><code>&nbsp;</code>&nbsp;</p>\r\n\r\n<p><code>#&nbsp;定义要创建的目录</code></p>\r\n\r\n<p><code>mkpath</code><code>=</code><code>&quot;d:\\\\qttc\\\\web\\\\&quot;</code></p>\r\n\r\n<p><code>#&nbsp;调用函数</code></p>\r\n\r\n<p><code>mkdir(mkpath)</code></p>\r\n\r\n<hr />\r\n<p>注意：os.mkdir(path)函数和多层创建目录函数os.makedirs(path)的区别。主要是当父目录不存在的时候os.mkdir(path)不会创建，而os.makedirs(path)会创建父目录。</p>','2018-09-30 07:04:17','2018-11-14 11:34:44',1,8,0),(27,'近期需要补充的知识','<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/video/av15614490?from=search&amp;seid=18064626727196635324\">scrapy框架模拟登陆与中间件</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/video/av18795617?from=search&amp;seid=18064626727196635324\">Python的Scrapy爬虫框架及中间件的编写，让你全面了解爬虫！</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/read/cv1179545?from=search\">爬虫你可能都会用，但是背后的架构你真的懂了吗？</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.baidu.com/s?ie=UTF-8&amp;wd=%E5%85%B3%E7%B3%BB%E5%92%8C%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93\">关系和非关系数据库</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/read/cv1170216?from=search\">最高效的8个Python爬虫框架，你知道几个呢！</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/read/cv1146369?from=search\">21天搞定Python分布爬虫</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://www.bilibili.com/read/cv1120859?from=search\">Python网络爬虫技巧小总结，静态、动态网页轻松爬取数据</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"http://ife.baidu.com/\">百度前端技术学院</a></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><a href=\"https://blog.csdn.net/u013332124/article/details/80621638\">XPath 用法总结整理</a></div>','2018-09-30 07:10:28','2018-09-30 07:18:03',1,5,0),(28,'XPath初次使用','<h2 style=\"margin-left:0cm; margin-right:0cm\">改了两个小时的格式，ckeditor真是又丑又难用@#@#%￥@&hellip;&hellip;#%&amp;&hellip;&hellip;&amp;%&hellip;&hellip;*&amp;%&hellip;&hellip;&amp;*</h2>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</h3>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</h3>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">1.</span><span style=\"color:#333333\">什么是</span><span style=\"color:#333333\">XPath</span></h3>\r\n\r\n<hr />\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; XML</span><span style=\"color:#333333\">路径语言（</span><span style=\"color:#333333\">XML Path Language</span><span style=\"color:#333333\">），是一门在</span><span style=\"color:#333333\"> XML </span><span style=\"color:#333333\">文档中查找信息的语言。</span><span style=\"color:#333333\">XPath </span><span style=\"color:#333333\">可用来在</span><span style=\"color:#333333\"> XML</span><span style=\"color:#333333\">文档中对元素和属性进行遍历。</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">在</span><span style=\"color:#333333\">chrome</span><span style=\"color:#333333\">中的使用</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</p>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">2.XPath</span><span style=\"color:#333333\">语法</span></h3>\r\n\r\n<hr />\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">XPath</span><span style=\"color:#333333\">语法三大类：</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><strong><span style=\"color:#333333\">层级</span></strong><span style=\"color:#333333\">：</span><span style=\"color:#333333\">/</span><span style=\"color:#333333\">直接子级、</span><span style=\"color:#333333\">//</span><span style=\"color:#333333\">跳级</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><strong><span style=\"color:#333333\">属性</span></strong><span style=\"color:#333333\">：</span><span style=\"color:#333333\">@</span><span style=\"color:#333333\">属性访问</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><strong><span style=\"color:#333333\">函数</span></strong><span style=\"color:#333333\">：</span><span style=\"color:#333333\">contains()</span><span style=\"color:#333333\">、</span><span style=\"color:#333333\">text()</span><span style=\"color:#333333\">等</span></p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</p>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</p>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">3.</span><span style=\"color:#333333\">使用</span><span style=\"color:#333333\">XPath</span></h3>\r\n\r\n<hr />\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">安装</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pip instal lxml </span></pre>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">导入与基本使用</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from lxml import etree</span>\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Selector = etree.HTML(HTML</span><span style=\"color:#333333\">文件)</span>\r\n\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Search = Selector.xpath(xpath</span><span style=\"color:#333333\">路径)</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">查到绝对路径下特定标签下特点属性的内容</span></h4>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">wb_data = &quot;&quot;&quot;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ul&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ul&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;&quot;&quot;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(wb_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;/html/body/div/ul/li/a/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(html)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # </span><span style=\"color:#333333\">或者这样</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i.text)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Element html at 0x138e4b8&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; first item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; second item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; third item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fourth item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fifth item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">获取相对路径下某个标签的内容</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(wb_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//li/a/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(html_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [&#39;first item&#39;, &#39;second item&#39;, &#39;third item&#39;, &#39;fourth item&#39;, &#39;fifth item&#39;]</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; first item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; second item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; third item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fourth item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fifth item</span></pre>\r\n\r\n<p style=\"margin-left:0cm; margin-right:0cm\">&nbsp;</p>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">查找最后一个</span><span style=\"color:#333333\">li</span><span style=\"color:#333333\">标签里的</span><span style=\"color:#333333\">a</span><span style=\"color:#333333\">标签的</span><span style=\"color:#333333\">href</span><span style=\"color:#333333\">属性</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(wb_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//li[last()]/a/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(html_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [&#39;fifth item&#39;]</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fifth item</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">查找倒数第二个</span><span style=\"color:#333333\">li</span><span style=\"color:#333333\">标签里的</span><span style=\"color:#333333\">a</span><span style=\"color:#333333\">标签的</span><span style=\"color:#333333\">href</span><span style=\"color:#333333\">属性</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(wb_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//li[last()-1]/a/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(html_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [&#39;fourth item&#39;]</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fourth item</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">4.XPath</span><span style=\"color:#333333\">的特殊用法</span></h3>\r\n\r\n<hr />\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">以相同标签开头</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # starts-with(@</span><span style=\"color:#333333\">属性名，属性字符相同的部分)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; web_data = &#39;&#39;&#39;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id=&quot;test-1&quot;&gt;</span><span style=\"color:#333333\">需要的内容1&lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id=&quot;test-2&quot;&gt;</span><span style=\"color:#333333\">需要的内容2&lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div id=&quot;test-3&quot;&gt;</span><span style=\"color:#333333\">需要的内容3&lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;text&quot;&gt;</span><span style=\"color:#333333\">不需要的内容&lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id=&quot;text-2&quot;&gt;</span><span style=\"color:#333333\">需要的内容4-1，</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;font color=&quot;red&quot;&gt;</span><span style=\"color:#333333\">需要的内容4-2，&lt;/font&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容4-3</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;&#39;&#39;</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(web_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//div[starts-with(@id,&quot;test&quot;)]/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容1</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容2</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容3</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<h4 style=\"margin-left:0cm; margin-right:0cm\"><span style=\"color:#333333\">&bull; </span><span style=\"color:#333333\">标签套标签</span></h4>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # string(.)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # </span><span style=\"color:#333333\">不经过处理的一般操作</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(web_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//div[@id=&quot;text-2&quot;]/text()&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(&#39;------&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容4-1，</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#333333\">需要的内容4-3</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ------</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # </span><span style=\"color:#333333\">用string()处理</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html = etree.HTML(web_data)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; html_data = html.xpath(&#39;//div[@id=&quot;text-2&quot;]&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for i in html_data:</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; print(i.text)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; info = html_data[0].xpath(&#39;string()&#39;).replace(&#39;\\n&#39;,&#39;&#39;).replace(&#39; &#39;,&#39;&#39;)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n<span style=\"color:#333333\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(info)</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">打印：</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容4-1，</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#333333\">需要的内容4-1，需要的内容4-2，需要的内容4-3</span></pre>\r\n\r\n<pre style=\"margin-left:0cm; margin-right:0cm\">\r\n\r\n&nbsp;</pre>\r\n\r\n<p>&nbsp;</p>','2018-10-01 02:19:49','2018-10-01 07:04:48',1,1,0),(29,'Python浅拷贝和深拷贝','<p>在使用scrapy过程中，</p>\r\n\r\n<ul>\r\n	<li><code>meta（dict）</code>&nbsp;- 属性的初始值Request.meta。如果给定，在此参数中传递的dict将被<strong>浅复制</strong>。</li>\r\n</ul>\r\n\r\n<p>接触到了<strong>浅复制和深复制（浅拷贝和深拷贝）</strong>，发现概念有点模糊了，所以又重新查了下资料，总结在这里</p>\r\n\r\n<p>简单来讲，浅拷贝创建了相对于原对象的一个新对象，但是内容却只是原对象的引用，这里以copy库举例</p>\r\n\r\n<ul>\r\n	<li><code>import copy</code></li>\r\n</ul>\r\n\r\n<p>1.&nbsp;copy.copy&nbsp;浅拷贝&nbsp;只拷贝父对象，不会拷贝对象的内部的子对象。(比深拷贝更加节省内存)<br />\r\n2.&nbsp;copy.deepcopy&nbsp;深拷贝&nbsp;拷贝对象及其子对象</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><br />\r\n<code>&gt;&gt;&gt; import copy<br />\r\n&gt;&gt;&gt; a=[[1,2],3,4]<br />\r\n&gt;&gt;&gt; b=copy.copy(a)<br />\r\n&gt;&gt;&gt; c=copy.deepcopy(a)<br />\r\n&gt;&gt;&gt; b<br />\r\n[[1, 2], 3, 4]<br />\r\n&gt;&gt;&gt; c<br />\r\n[[1, 2], 3, 4]</code></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><br />\r\n<code>&gt;&gt;&gt; id(a)<br />\r\n2438272835336<br />\r\n&gt;&gt;&gt; id(b)<br />\r\n2438283605896<br />\r\n&gt;&gt;&gt; id(c)<br />\r\n2438283539528</code></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><br />\r\n<code>&gt;&gt;&gt; id(a[0])<br />\r\n2438283539784<br />\r\n&gt;&gt;&gt; id(b[0])<br />\r\n2438283539784<br />\r\n&gt;&gt;&gt; id(c[0])<br />\r\n2438283539976</code></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><br />\r\n<code>&gt;&gt;&gt; a[0].append(666)<br />\r\n&gt;&gt;&gt; a<br />\r\n[[1, 2, 666], 3, 4]<br />\r\n&gt;&gt;&gt; b<br />\r\n[[1, 2, 666], 3, 4]<br />\r\n&gt;&gt;&gt; c<br />\r\n[[1, 2], 3, 4]</code></div>\r\n\r\n<p>可以看到b（a的浅拷贝对象）的内容id与a一致，但值得注意的是</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>&gt;&gt;&gt; a[1]=666<br />\r\n&gt;&gt;&gt; a<br />\r\n[[1, 2, 666], 666, 4]<br />\r\n&gt;&gt;&gt; b<br />\r\n[[1, 2, 666], 3, 4]<br />\r\n&gt;&gt;&gt; c<br />\r\n[[1, 2], 3, 4]</code></div>\r\n\r\n<p>原因在于，在Python中数字为不可变类型，这里顺便回顾一下Python中的数据类型：</p>\r\n\r\n<p><strong>可变类型：&nbsp;列表，字典<br />\r\n不可变类型：数字，字符串，元组</strong></p>\r\n\r\n<p>对象赋值也是简单的对象引用，<a href=\"http://liuya.pythonanywhere.com/blog/article/25\">Python的地址引用问题</a></p>\r\n\r\n<p>&nbsp;</p>','2018-10-06 05:28:22','2018-11-14 11:29:50',1,8,0),(30,'自娱：用re的间隔提取以及XPath的string()相关','<p><br />\r\n# 自娱：用re进行的间隔提取<br />\r\nimport re</p>\r\n\r\n<p><br />\r\ndatas=&#39;&#39;&#39;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;div class=&quot;main&quot;&gt;这是一段<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;span&gt;完整的<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;p&gt;对话&lt;/p&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/span&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&#39;&#39;&#39;</p>\r\n\r\n<p><br />\r\n# 第一种方法：分段截取<br />\r\ndata=&quot;&quot;<br />\r\nstrs=[]</p>\r\n\r\n<p><br />\r\ninfos = re.search(&#39;&lt;div class=&quot;main&quot;&gt;(.*?)&lt;/div&gt;&#39;,datas,re.S).group(1)<br />\r\nstrs.append(re.search(&#39;(.*?)\\n&#39;,infos,re.S).group(1))<br />\r\nstrs.append(re.search(&#39;&lt;span&gt;(.*?)\\n&#39;,infos,re.S).group(1))<br />\r\nstrs.append(re.search(&#39;&lt;p&gt;(.*?)&lt;/p&gt;&#39;,infos,re.S).group(1))<br />\r\nfor i in strs:<br />\r\n&nbsp;&nbsp; &nbsp;data += i<br />\r\nprint(data)</p>\r\n\r\n<p><br />\r\n# 第二种方法：replace<br />\r\ninfos = re.search(&#39;&lt;div class=&quot;main&quot;&gt;(.*?)&lt;/div&gt;&#39;,datas,re.S).group(1)<br />\r\ninfo = infos.replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;).replace(&quot;&lt;span&gt;&quot;,&quot;&quot;).replace(&quot;&lt;/span&gt;&quot;,&quot;&quot;).replace(&quot;&lt;p&gt;&quot;,&quot;&quot;).replace(&quot;&lt;/p&gt;&quot;,&quot;&quot;)<br />\r\nprint(info)</p>\r\n\r\n<p><br />\r\n# 那XPath呢<br />\r\nfrom lxml import etree<br />\r\ninfos = etree.HTML(datas)<br />\r\ninfo = infos.xpath(&#39;//div&#39;)<br />\r\ndata = info[0].xpath(&#39;string(.)&#39;).replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;)<br />\r\nprint(data)</p>\r\n\r\n<p><br />\r\n# XPath中data()、text()以及string()的区别 &nbsp;<a href=\"https://blog.csdn.net/weixin_39285616/article/details/78463091\">https://blog.csdn.net/weixin_39285616/article/details/78463091</a><br />\r\n# XPath中string()的正确写法 &nbsp; &nbsp;<a href=\"https://blog.csdn.net/ShellDawn/article/details/71192067\">https://blog.csdn.net/ShellDawn/article/details/71192067</a><br />\r\n&#39;&#39;&#39;<br />\r\n直接结论：<br />\r\n&nbsp;&nbsp; &nbsp;1、text()不是函数，XML结构的细微变化，可能会使得结果与预期不符，应该尽量少用，data()作为特殊用途的函数，可能会出现性能问题，如无特殊需要尽量不用，string()函数可以满足大部分的需求。<br />\r\n&nbsp;&nbsp; &nbsp;2、<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;text = selector.xpath(&#39;//div[@span=&quot;ct&quot;]/string(.)&#39;).extract_first()<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;#写成这样是xpath语法错误，而把string(.)单独提出来就可以过<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;data = selector.xpath(&#39;//div[@span=&quot;ct&quot;]&#39;)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;text = data.xpath(&#39;string(.)&#39;).extract_first()<br />\r\n&#39;&#39;&#39;</p>','2018-10-06 13:22:36','2018-10-06 13:26:19',1,2,0),(31,'Sublime查看json文件','<p>在用scrapy获取数据保存为json格式后，打开发现</p>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/10/10/json.jpg\" style=\"height:208px; width:500px\" /></p>\r\n\r\n<p>全部变成Unicode编码</p>\r\n\r\n<p>解决方法：</p>\r\n\r\n<p>1、网站解析</p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;<a href=\"http://json.parser.online.fr/\"><strong>Json Parser Online</strong></a></p>\r\n\r\n<p><strong>&nbsp; &nbsp;&nbsp;<a href=\"http://jsonprettyprint.com/\">JSON Pretty Print</a></strong></p>\r\n\r\n<p>2、Sublime安装Pretty JSON插件查看</p>\r\n\r\n<p>安装步骤：</p>\r\n\r\n<p>1)、先安装好<strong><a href=\"https://packagecontrol.io/installation\">Package Control</a></strong></p>\r\n\r\n<p>2)、按下<strong>CTRL + SHIFT + P</strong>输入Package Control: <strong>Install Package</strong></p>\r\n\r\n<p>3)、在输入<strong>Pretty JSON</strong>，按下ENTER完成安裝</p>\r\n\r\n<p>4)、按下热键：<strong>CTRL + ALT + J</strong>可看到UTF-8编码后的结果</p>\r\n\r\n<p>5)、可以在Preferences &gt; Package Settings &gt; Pretty JSON &gt; Settings - Default​调整设置</p>','2018-10-10 02:50:14','2018-10-10 02:50:14',1,2,0),(32,'GitHub记录','<p>想做完了再上传的，但是之前的笔记丢失了，所以有一点就记一点吧</p>\r\n\r\n<hr />\r\n<p>问题：我有一个项目，我失误推送了一部分到本地仓库，我想把剩下的一部分也加进去怎么处理<br />\r\n问题：一次性将工作区推至暂存区</p>','2018-10-16 03:49:56','2018-10-16 03:49:56',1,2,0),(36,'CentOS 7下安装python3并安装Scrapy','<h2>1. 安装python3</h2>\r\n\r\n<ul>\r\n	<li>下载python3的安装包</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</code>\r\n</pre>\r\n\r\n<ul>\r\n	<li>安装编译需要的关联库</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>yum install -y zlib zlib-devel   (在我的系统中只缺少这两个包，其他系统中可能缺少其他的包，同样用yum安装即可)</code></pre>\r\n\r\n<ul>\r\n	<li>解压，编译，安装</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>#解压\r\ntar -zxvf Python-3.7.0.tgz\r\n#进入解压后的目录\r\ncd Python-3.7.0\r\n#编译\r\n./configure </code>--with-ssl<code> --prefix=/usr/local/python3   (prefix表示安装的路径，我安装在/usr/local中，也可以安装其他地方)\r\n#安装\r\nmake &amp;&amp; make install</code></pre>\r\n\r\n<ul>\r\n	<li>创建python3的软连接</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>ln -s /usr/local/python3/bin/python3.7 /usr/bin/python3\r\n(软连接的文件名不要用python，因为python已经指向了python2.7)</code></pre>\r\n\r\n<ul>\r\n	<li>创建pip3的软连接</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</code></pre>\r\n\r\n<ul>\r\n	<li>现在就可以在命令行中直接输入python3来打开python3的shell，也可以直接使用pip3下载python3的库。</li>\r\n</ul>\r\n\r\n<h2>2. 创建python3的虚拟环境</h2>\r\n\r\n<ul>\r\n	<li>下载virtulenv&nbsp; &nbsp;(若是创建不成功或是报错的话就先执行第3步中配置pip安装源为阿里云)</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>pip3 install virtualenv</code></pre>\r\n\r\n<ul>\r\n	<li>创建virtulenv软连接</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv</code></pre>\r\n\r\n<ul>\r\n	<li>创建虚拟环境</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>在命令行直接输入：\r\nvirtualenv 虚拟环境名 -p /usr/bin/python3</code></pre>\r\n\r\n<ul>\r\n	<li>进入虚拟环境</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>#cd进入虚拟环境的目录  我的环境名是liuya，通过find找到虚拟环境路径为/home/evic/下载/Python-3.7.0/liuya</code><code>\r\nsource ./bin/activate</code></pre>\r\n\r\n<ul>\r\n	<li>退出虚拟环境</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>#在命令行输入\r\ndeactivate</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>参考文章：</p>\r\n\r\n<p><a id=\"1\" name=\"1\"></a>[1]、<a href=\"https://blog.csdn.net/qq_26870933/article/details/81502484\">CentOS 7系统下安装python3并创建python3虚拟环境以及安装scrapy爬虫框架</a></p>\r\n\r\n<p><a id=\"2\" name=\"2\"></a>[2]、<a href=\"https://blog.csdn.net/youcijibi/article/details/78306961\">python中使用pip install 命令时报ssl缺失的错误</a></p>\r\n\r\n<p><a id=\"3\" name=\"3\"></a>[3]、<a href=\"https://blog.csdn.net/qq_36416904/article/details/79316972\">关于在centos下安装python3.7.0以上版本时报错ModuleNotFoundError: No module named &#39;_ctypes&#39;的解决办法</a></p>\r\n\r\n<p><a id=\"4\" name=\"4\"></a>[4]、<a href=\"https://blog.csdn.net/u014474674/article/details/78365538/\">centos 6 python3 安装 Collecting Twisted&gt;=13.1.0 (from Scrapy) Could not find a version that satisf</a></p>\r\n\r\n<p><a id=\"5\" name=\"5\"></a>[5]、<a href=\"https://blog.csdn.net/wengzilai/article/details/78722626\">centos7 安装python3 和 virtualenv 正确姿势</a></p>\r\n\r\n<p><a id=\"6\" name=\"6\"></a>[6]、<a href=\"https://www.jb51.net/article/112859.htm\">Linux下解压.tar.xz文件的办法</a></p>','2018-10-16 12:06:07','2018-10-16 13:31:20',1,3,0),(37,'CentOS7 下安装Pycharm专业版','<h2>1.下载安装包</h2>\r\n\r\n<p>命令行模式中输入命令：</p>\r\n\r\n<p>weget https://download.jetbrains.com/python/pycharm-professional-2018.1.tar.gz</p>\r\n\r\n<p>ps：weget命令默认下载到当前文件夹下</p>\r\n\r\n<h2>2.解压下载的压缩包：</h2>\r\n\r\n<p>命令行模式中cd切换到到压缩包所在文件夹位置，运行解压缩命令解压到将要安装的文件夹下：</p>\r\n\r\n<p>tar -xzvf pycharm-professional-2018.1.tar.gz</p>\r\n\r\n<h2>3.运行bin目录中的.pycharm.sh：</h2>\r\n\r\n<p>进入解压后的文件夹下的bin目录，运行命令：</p>\r\n\r\n<p>./pycharm.sh</p>\r\n\r\n<h2>4.进入图形界面安装：</h2>\r\n\r\n<p><img alt=\"\" src=\"https://www.linuxidc.com/upload/2018_04/180422082714961.jpg\" /></p>\r\n\r\n<p>自动跳转到图形安装界面，选择第二项，选取ok到下一步：</p>\r\n\r\n<h2>5.软件激活：</h2>\r\n\r\n<p>在安装过程中选择激活码激活（中间一个）<br />\r\n注册码下载地址：<a href=\"http://idea.lanyus.com/\">http://idea.lanyus.com/</a></p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">使用前请将&ldquo;0.0.0.0 account.jetbrains.com&rdquo;添加到hosts文件中</span></strong></p>\r\n\r\n<p>进入<a href=\"http://idea.lanyus.com/\">http://idea.lanyus.com/</a>，按照要求进行</p>\r\n\r\n<p>**特别提醒：一定要先修改好hosts完成以后，才点击【获得注册码】，否则验证不通过！**</p>\r\n\r\n<p>修改hosts文件，先切换到root用户，再修改hosts文件</p>\r\n\r\n<p>$ su root</p>\r\n\r\n<p># vi /etc/hosts</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>在/etc/hosts文件末行添加一行0.0.0.0 account.jetbrains.com，注意account前面有一个空格</strong></span></p>\r\n\r\n<p>然后再点击如上截图中的【获得注册码】，将获取到的注册码粘贴到安装界面的激活码文本框中即可，剩下的就按照安装指示安装即可</p>\r\n\r\n<h2>6.添加软连接：</h2>\r\n\r\n<p>命令行模式中输入命令：</p>\r\n\r\n<p>ln -s /home/evic/下载/pycharm-2018.1.1/bin/pycharm.sh /usr/sbin/pycharm</p>\r\n\r\n<p>ps:代码中/home/evic/下载/pycharm-2018.1.1/bin/pycharm.sh是pycharm.sh文件所在位置，根据第2步解压缩位置调整</p>\r\n\r\n<p>ps2：代码中最后的pycharm相当于创建一个快捷方式名称为pycharm，以后在命令行中输出pycharm就可以执行这个程序</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>参考文章：</p>\r\n\r\n<p><a id=\"1\" name=\"1\"></a>[1]、<a href=\"https://blog.csdn.net/yaoqiwaimai/article/details/74626851\">【亲测】centos 7下安装pycharm专业版</a></p>\r\n\r\n<p><a id=\"1\" name=\"1\"></a>[2]、<a href=\"https://www.linuxidc.com/Linux/2018-04/152003.htm\">CentOS 7安装Pycharm 简记</a></p>\r\n\r\n<p><a id=\"1\" name=\"1\"></a>[3]、<a href=\"http://idea.lanyus.com/\">IntelliJ IDEA 注册码</a></p>\r\n\r\n<p>&nbsp;</p>','2018-10-16 13:59:27','2018-10-16 13:59:27',1,3,0),(38,'CentOS下安装remarkable的始末','<h1>初始安装</h1>\r\n\r\n<p>1、<a href=\"https://remarkableapp.github.io/linux/download.html\">下载rpm文件</a>到本地</p>\r\n\r\n<p>2、在下载目录下打开终端，尝试安装</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>rpm -ivh remarkable-1.87-1.rpm</code>&nbsp;</div>\r\n\r\n<p>报错：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">错误：依赖检测失败：<br />\r\n&nbsp;&nbsp; &nbsp;python3-beautifulsoup4 被 remarkable-1.87-1.noarch 需要<br />\r\n&nbsp;&nbsp; &nbsp;python3-markdown 被 remarkable-1.87-1.noarch 需要<br />\r\n&nbsp;&nbsp; &nbsp;wkhtmltopdf 被 remarkable-1.87-1.noarch 需要<br />\r\n[root@localhost 下载]# yum install python3-beautifulsoup4</div>\r\n\r\n<p>解决：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>yum install&nbsp;wkhtmltopdf<br />\r\nyum install&nbsp;python3-beautifulsoup4<br />\r\nyum install&nbsp;python3-markdown</code></div>\r\n\r\n<p>然后在安装python3-markdown和python3-beautifulsoup4时候报错：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>已加载插件：fastestmirror, langpacks<br />\r\nLoading mirror speeds from cached hostfile<br />\r\n&nbsp;* base: centos.ustc.edu.cn<br />\r\n&nbsp;* epel: mirrors.yun-idc.com<br />\r\n&nbsp;* extras: centos.ustc.edu.cn<br />\r\n&nbsp;* updates: mirrors.nju.edu.cn<br />\r\n没有可用软件包 python3-beautifulsoup4。<br />\r\n错误：无须任何处理</code></div>\r\n\r\n<p>尝试用pip3安装了bs4和markdown但是依然没解决依赖问题，无果，再试试</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>yum install&nbsp;remarkable-1.87-1.rpm</code></div>\r\n\r\n<p>然后报错：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>错误：软件包：remarkable-1.87-1.noarch (/remarkable-1.87-1)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需要：python3-markdown<br />\r\n错误：软件包：remarkable-1.87-1.noarch (/remarkable-1.87-1)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 需要：python3-beautifulsoup4</code></div>\r\n\r\n<p>再尝试解决：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>yum install remarkable</code></div>\r\n\r\n<p>再报错：</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><code>没有可用软件包 remarkable。<br />\r\n错误：无须任何处理</code></div>\r\n\r\n<p>我是智障吗？！</p>\r\n\r\n<p>&nbsp;</p>','2018-10-17 05:52:38','2018-10-17 06:26:02',1,3,0),(39,'Markdown添加空格和空行','<p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 下雨天写Markdown真是一件开心的事情</strong></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt=\"\" src=\"/media/upload/2018/10/17/20e16823-1eb9-4546-9df0-3f46ad4bcca1.jpeg\" style=\"height:124px; width:160px\" /></p>\r\n\r\n<p>但是很多时候排版排的实在太拥挤，于是找了一下以下方法</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; 空行的操作是输入<code>&amp;nbsp;</code></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;空格的操作是输入<code>&amp;emsp;</code></p>','2018-10-17 14:45:31','2018-11-14 11:29:39',1,8,0),(40,'可以开辟一个留言区','<p>可以开辟一个留言区用来记录、传递和留言</p>','2018-10-19 01:37:35','2018-10-19 01:37:35',1,2,0),(41,'Pythonanywhere备份','<h3>网站的文件备份和更新可以借由git完成，此处不表</h3>\r\n\r\n<h3>数据库的备份</h3>\r\n\r\n<p>在Pythonanywhere的帮助文档上，可以找到<a href=\"https://help.pythonanywhere.com/pages/MySQLBackupRestore/\">[</a><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><a href=\"https://help.pythonanywhere.com/pages/MySQLBackupRestore/\">使用mysqldump备份数据库]</a>，具体如下：</span></span></p>\r\n\r\n<p>首先在<span class=\"marker\">Databases</span>面板下的<span class=\"marker\">Connecting</span>可以找到你mysql服务器的<strong>主机名（</strong><span class=\"marker\">Database host address</span><strong>）</strong>和<span class=\"marker\">Username</span><strong>，</strong>通常是类似的<code>yourusername.mysql.pythonanywhere-services.com</code></p>\r\n\r\n<p><code>在</code><span class=\"marker\">Your databases</span>:选项下可以找到你要备份<strong>的数据库全名（即控制台</strong><span class=\"marker\">Start a console on</span>后的名字<strong>）</strong>。这些通常遵循命名约定<code>yourusername$dbname</code>&nbsp;- 因此全名包括您的用户名和字符&ldquo;$&rdquo;</p>\r\n\r\n<p>然后在控制台中输入</p>\r\n\r\n<pre style=\"margin-left:2em; margin-right:2em\">\r\n<span style=\"background-color:#f8f8f8\"><span style=\"color:#333333\">mysqldump -u yourusername -h yourusername.mysql.pythonanywhere-services.com <span style=\"color:#ba2121\">&#39; yourusername $ dbname&#39;</span>   &gt; db-backup.sql</span></span></pre>\r\n\r\n<p>然后，<strong><em>db-backup.sql</em></strong>文件将在您的主文件夹中（通过&ldquo;&nbsp;<em>文件&rdquo;</em>选项卡）提供，您可以将其下载到安全的位置。</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">由于完整数据库名称中的&ldquo;$&rdquo;字符，因此需要数据库名称周围的&ldquo;单引号&rdquo;。</span></span></div>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">您会注意到我们没有输入数据库的密码。那是因为你的密码会被pythonanywhere系统自动保存到文件中<code>~/.my.cnf</code>。</span></span></div>\r\n\r\n<h3 style=\"margin-left:0px; margin-right:0px\">还原数据库</h3>\r\n\r\n<p style=\"margin-left:0px; margin-right:0px\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">如果以后需要还原，请运行以下命令：</span></span></p>\r\n\r\n<pre style=\"margin-left:2em; margin-right:2em\">\r\n<span style=\"background-color:#f8f8f8\"><span style=\"color:#333333\">mysql -u yourusername -h yourusername.mysql.pythonanywhere <span style=\"color:#ba2121\">-services.com&#39;wourusername $ dbname&#39;</span>   &lt;db-backup.sql\r\n</span></span></pre>\r\n\r\n<p style=\"margin-left:0px; margin-right:0px\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">请注意，这将完全删除数据库中的任何现有数据！</span></span></p>\r\n\r\n<h3 style=\"margin-left:0px; margin-right:0px\">自动备份</h3>\r\n\r\n<p style=\"margin-left:0px; margin-right:0px\">在<span class=\"marker\">Tasks</span>选项卡中创建一个<span class=\"marker\">Scheduled tasks</span>，内容为刚刚备份的语句就可以</p>','2018-10-20 11:49:24','2018-11-14 03:50:52',1,7,0),(42,'linux知识体系框图','<h2>右键在浏览器新标签页中打开，然后可以放大查看</h2>\r\n\r\n<p><img alt=\"\" src=\"/media/upload/2018/10/26/linux.png\" style=\"height:1787px; width:600px\" /></p>','2018-10-26 03:23:30','2018-10-26 03:27:26',1,3,0),(44,'Linux遇到的一点不理解的权限问题','<p><br />\r\n问题描述：<br />\r\n名称简写：<br />\r\n~/liuya/linux文件目录系统.md &nbsp; 以下简称为A文件<br />\r\n~/liuya/resource-library&nbsp; &nbsp;是一个git仓库，以下简称为B目录<br />\r\n~/liuya/linux/resource-library/文件目录系统.md &nbsp; 以下简称为ACP文件</p>\r\n\r\n<h3><br />\r\n<strong>我作为普通用户可以修改保存A文件（权限664），然后把A文件cp到B目录（权限755）下变成ACP文件（权限644）<br />\r\nACP文件就无法编辑保存了，<span style=\"color:#e74c3c\">然后我将ACP文件的权限修改至664，还是无法保存修改，为什么？？？</span><br />\r\n然后我认为是因为他在目录的原因，所以将B目录的权限修改至777，依然保存不了，所以是为什么？？？</strong></h3>\r\n\r\n<p><br />\r\n真实的目录结构：<br />\r\n/home/liuya<br />\r\n&nbsp; &nbsp; ├── linux文件目录系统.md<br />\r\n&nbsp; &nbsp; └── resource-library<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; └── linux文件目录系统.md</p>\r\n\r\n<p><br />\r\n权限：<br />\r\n-rw-rw-r-- &nbsp;1 zelin zelin 2718 11月 &nbsp;3 13:41 linux文件目录系统.md &nbsp; &nbsp; （A）<br />\r\ndrwxr-xr-x &nbsp;6 root &nbsp;root &nbsp;4096 11月 &nbsp;3 11:37 resource-library/ &nbsp; &nbsp; &nbsp; （B）<br />\r\n-rw-r--r-- &nbsp;1 root &nbsp;root &nbsp; &nbsp;2718 11月 &nbsp;3 13:42 linux文件目录系统.md &nbsp; （ACP）</p>','2018-11-03 06:16:56','2018-11-03 06:16:56',1,2,0),(45,'解决Table already exists问题','<p>问题：django.db.utils.OperationalError: (1050, &quot;Table &#39;auth_permission&#39; already exists&quot;) The Python REPL process has exited</p>\r\n\r\n<p>解决：</p>\r\n\r\n<p>该auth_permissions表已存在于您的数据库中，但迁移认为它不存在。尝试伪造迁移以超越这一点。</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">./manage.py migrate auth --fake</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div style=\"background:#eeeeee; border:1px solid #cccccc; padding:5px 10px\">~$:python3 manage.py migrate auth --fake</div>','2018-11-14 01:17:46','2018-11-14 01:17:46',1,7,0),(46,'对于博客形式的一点想法-增量式','<p>增量式开发，又叫增量开发，是软件工程当中，一种常用的软件开发过程思想。其中增量是指在软件开发过程中，先开发主要功能模块，再开发次要功能模块，逐步完善，最终开发出符合需求的软件产品。</p>\r\n\r\n<p>可能是我接触博客少了的原因，我觉得现有的博客形式很不方便：</p>\r\n\r\n<p>首先，我写博客的目的是为了记录，做一些笔记，写一些bug处理的方法，以及平时的一些想法，我写的东西没有一个固定的框架，头可能是头，尾却是不确定的，需要在后面一直增加（因为菜呀，总是能学到新知识），所以大佬们的那种教程式的博客，一次写完，框架完整，结构完备，终身修改的形式不太适合我这样的学习式博客呀</p>\r\n\r\n<p>然后就是排版真的真的好麻烦，排版是抑制我写博客的最大原因。</p>\r\n\r\n<p>按照&ldquo;问题-原因-解决&rdquo;的流程，最后讲的就是我对这个问题的一点解决思路了：</p>\r\n\r\n<p>排版问题的解决思路很简单&mdash;&mdash;给博客编辑添加markdowm编辑模式。</p>\r\n\r\n<p>博客形式的解决思路&mdash;&mdash;我之前做的一个留言区在一定程度上解决了这个问题，<br />\r\n或许我们可以借助git的形式？点击编辑，然后完善保存的时候会在旁边显示一个时间线，点击时间线可以看到以往的博客，也可以一直往下增加。</p>','2018-11-14 02:29:59','2018-11-14 02:29:59',1,2,0),(48,'markdown里的表格怎么输入‘|’','<p>用&amp;#124;</p>','2018-11-14 11:14:06','2018-11-14 11:34:11',1,9,0),(49,'Markdown页内跳转','<pre>\r\n<code>1. 先定义一个锚(id)\r\n\r\n                    &lt;span id=&quot;jump&quot;&gt;Hello World&lt;/span&gt;\r\n\r\n 2. 然后使用markdown的语法:\r\n\r\n                    [XXXX](#jump)</code></pre>','2018-11-14 11:28:03','2018-11-14 11:34:01',1,9,0),(50,'自我总结','<h2>我从十月的月底开始决定，每个月养成一个好一点的习惯，这一点可以日后写一篇总结。第一个养成的习惯是坚持晚上刷牙，不要断断续续。第二个习惯决定就是每天的总结。</h2>\r\n\r\n<p>感于最近效率底下，所以把每天早中晚的学习内容或者进度做一个简单的总结和计划：</p>\r\n\r\n<p>大致格式：</p>\r\n\r\n<hr />\r\n<p>2018-11-22-星期四</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[预计学习]</span>实际行为</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[Bootstrap实战]</span>实际行为</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[做&times;&times;笔记到哪一节]</span>实际行为</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<hr />\r\n<p>即，时间段+[计划内容]+实际内容</p>','2018-11-22 06:26:09','2018-11-23 12:00:02',1,2,0),(51,'js零散笔记记录','<p>还是以留言板的形式记录遇到的js知识</p>','2018-11-29 08:41:07','2018-11-29 08:41:07',1,2,0);
/*!40000 ALTER TABLE `blog_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_blog_type`
--

DROP TABLE IF EXISTS `blog_blog_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_blog_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type_name` varchar(15) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_blog_type`
--

LOCK TABLES `blog_blog_type` WRITE;
/*!40000 ALTER TABLE `blog_blog_type` DISABLE KEYS */;
INSERT INTO `blog_blog_type` VALUES (1,'笔记'),(2,'个人记录'),(3,'Linux'),(4,'资源分享'),(5,'自知'),(7,'Django'),(8,'Python-3'),(9,'Markdown');
/*!40000 ALTER TABLE `blog_blog_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comment_comment`
--

DROP TABLE IF EXISTS `comment_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `object_id` int(10) unsigned NOT NULL,
  `comment_time` datetime NOT NULL,
  `comment_text` longtext NOT NULL,
  `comment_user_id` int(11) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `comment_comment_comment_user_id_f0937c94_fk_auth_user_id` (`comment_user_id`),
  KEY `comment_comment_content_type_id_fbfb9793_fk_django_co` (`content_type_id`),
  CONSTRAINT `comment_comment_comment_user_id_f0937c94_fk_auth_user_id` FOREIGN KEY (`comment_user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `comment_comment_content_type_id_fbfb9793_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=174 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment_comment`
--

LOCK TABLES `comment_comment` WRITE;
/*!40000 ALTER TABLE `comment_comment` DISABLE KEYS */;
INSERT INTO `comment_comment` VALUES (1,2,'2018-09-08 01:58:15','评论呀  测个试',1,7),(3,2,'2018-09-08 03:03:08','要不要把最新的评论放在最上面',1,7),(4,2,'2018-09-08 08:38:45','可以了，接下来是改成富文本编辑，评论展示也要换一下',1,7),(5,1,'2018-09-10 08:47:45','评论测试专用地',1,7),(6,1,'2018-09-10 10:08:58','再次测试',1,7),(9,1,'2018-09-10 10:32:15','<p><img alt=\"sad\" height=\"23\" src=\"http://localhost:8000/static/ckeditor/ckeditor/plugins/smiley/images/sad_smile.png\" title=\"sad\" width=\"23\" />再次测试，后台富文本编辑起冲突</p>',1,7),(10,1,'2018-09-10 11:04:57','<p><strong>这里需要在</strong><!--StartFragment --><span style=\"color:#e74c3c\">CKEDITOR_CONFIGS</span><strong><span style=\"color:null\">配置</span>里面加多一个</strong><!--StartFragment --><span style=\"color:null\"><span style=\"background-color:#dddddd\">&#39;default&#39;:{},</span></span><span style=\"color:#e67e22\"><span style=\"background-color:#dddddd\">&nbsp;</span></span></p>\r\n\r\n<p><strong><span style=\"color:null\">不然会出现<span style=\"background-color:#dddddd\">ImproperlyConfigured: No configuration named &#39;default&#39;</span></span></strong></p>',1,7),(11,1,'2018-09-10 11:05:49','<p>评论列表的用户名，时间显示的而太普通和拥挤，需要重新调整</p>',1,7),(12,1,'2018-09-10 11:06:23','<p><img alt=\"indecision\" height=\"23\" src=\"http://localhost:8000/static/ckeditor/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.png\" title=\"indecision\" width=\"23\" /><strong>还没找到工作，先吃饭ahhh</strong></p>',1,7),(14,1,'2018-09-11 03:35:20','<p><strong>Ajax疯狂报错</strong></p>',1,7),(15,15,'2018-09-13 13:12:40','<p>可以写一个在每行前插入&lt;p&gt;标签的脚本，然后复制到ckeditor的源码框里就会方便编辑一点<img alt=\"surprise\" height=\"23\" src=\"http://liuya.pythonanywhere.com/static/ckeditor/ckeditor/plugins/smiley/images/omg_smile.png\" title=\"surprise\" width=\"23\" />但是这个脚本怎么写</p>',1,7),(16,23,'2018-09-28 13:09:21','<p>在进行标签传播算法时，需要统计具有相同标签的节点</p>',1,7),(17,32,'2018-10-16 05:07:23','<p>&ldquo;<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000\">假如我们在dev上的工作完成了，就可以把dev合并到master上。Git怎么合并呢？最简单的方法，就是直接把master指向dev的当前提交，就完成了合并：</a>&rdquo;</p>\r\n\r\n<p>但是当master和dev分支上都有内容时呢？这么不会丢失掉master分支上的修改吗</p>',1,7),(18,32,'2018-10-16 05:09:48','<p>机翻自git --help命令</p>\r\n\r\n<p><strong>这些是在各种情况下使用的通用GIT命令：</strong></p>\r\n\r\n<p><strong>启动工作区（参见：Git帮助 tutorial）</strong><br />\r\n&nbsp; &nbsp;clone &nbsp; &nbsp; &nbsp;克隆到新目录库<br />\r\n&nbsp; &nbsp;init &nbsp; &nbsp; &nbsp; 创建一个空的Git存储库或重新初始化一个现有的存储库</p>\r\n\r\n<p><strong>处理当前的变化（参见：Git帮助 everyday）</strong><br />\r\n&nbsp; &nbsp;add &nbsp; &nbsp; &nbsp; &nbsp;向暂存库中添加文件内容<br />\r\n&nbsp; &nbsp;mv &nbsp; &nbsp; &nbsp; &nbsp; 移动或重命名文件、目录或链接<br />\r\n&nbsp; &nbsp;reset &nbsp; &nbsp; &nbsp;恢复当前版本到指定状态<br />\r\n&nbsp; &nbsp;rm &nbsp; &nbsp; &nbsp; &nbsp; 从工作区或者暂存区中删除文件</p>\r\n\r\n<p><strong>检查历史和状态（参见：Git帮助 revisions）</strong><br />\r\n&nbsp; &nbsp;bisect &nbsp; &nbsp; &middot;&middot;&middot;&middot;使用二进制搜索来查找引入bug的提交<br />\r\n&nbsp; &nbsp;grep &nbsp; &nbsp; &nbsp; &middot;&middot;&middot;&middot;匹配图案的GRIP打印行<br />\r\n&nbsp; &nbsp;log &nbsp; &nbsp; &nbsp; &nbsp;显示提交日志<br />\r\n&nbsp; &nbsp;show &nbsp; &nbsp; &nbsp; 显示各种对象<br />\r\n&nbsp; &nbsp;status &nbsp; &nbsp; 显示工作区状态</p>\r\n\r\n<p><strong>扩展、标记和调整你们的共同历史</strong><br />\r\n&nbsp; &nbsp;branch &nbsp; &nbsp; 列表、创建或删除分支<br />\r\n&nbsp; &nbsp;checkout &nbsp; 切换分支或恢复工作区文件<br />\r\n&nbsp; &nbsp;commit &nbsp; &nbsp; 向存储库提交记录更改<br />\r\n&nbsp; &nbsp;diff &nbsp; &nbsp; &nbsp; 显示提交、提交和工作区等之间的变化<br />\r\n&nbsp; &nbsp;merge &nbsp; &nbsp; &nbsp;将两个或多个开发历史合并在一起<br />\r\n&nbsp; &nbsp;rebase &nbsp; &nbsp; 重新应用在另一个基础尖端上的提交<br />\r\n&nbsp; &nbsp;tag &nbsp; &nbsp; &nbsp; &nbsp;创建、列表、删除或验证用GPG签名的标记对象</p>',1,7),(19,32,'2018-10-16 05:50:37','<p>一些在学习时冒出的想法，不算困难的什么问题，只是实验一下就可以解决的，但是我觉得记下来自己的疑问和想法会很有意思</p>\r\n\r\n<p>1、有两个文件，都改变了内容，但是分开提交到仓库，第一个commit &quot;test1&quot;，第二个commit &quot;test2&quot;，每次提交都只提交一次修改，那么当我reset后另外一个文件会改变吗</p>\r\n\r\n<p>2、创建一个分支，并且修改文件提交至仓库，切换回master时，当前处于master的commit还是新分支的，master也修改提交了文件，那么master是否可以直接切换到新分支的修改上</p>',1,7),(20,33,'2018-10-16 10:12:09','<p>6、后续环境设置<br />\r\n因为我们安装的是python，默认环境是python3.6，这时候你会发现你的yum不能用了，因为yum是基于系统默认安装的python2.7版本，因此我们还要修改yum的运行环境&nbsp;<br />\r\n找到yum相关的软件包&nbsp;<br />\r\n例如：which yum&nbsp;<br />\r\n/usr/bin/yum</p>\r\n\r\n<p>vi /usr/bin/yum<br />\r\n修改第一行的环境，将原来的python改为python2，如果有多个yum相关的软件包，则依次修改即可。<br />\r\n---------------------&nbsp;<br />\r\n作者：烟雨醉梦里<br />\r\n原文：https://blog.csdn.net/qq_27754983/article/details/78623258?utm_source=copy</p>\r\n\r\n<p>&nbsp;</p>',1,7),(21,36,'2018-10-16 12:17:20','<p>由于时间关系，这里还有涉及到一些其他的诸如版本共存、yum修改头等等问题都没有提到，之后有空学习markdown后我会对网站文章进行重写，这里有需要注意的地方我会写在评论中</p>',1,7),(22,36,'2018-10-16 12:31:39','<p>1、如果wget 下载不了，可直接在浏览器下载，地址：<a href=\"https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz\">https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz</a>其他版本改版本号就像，xz的解压问题参考参考[5]或者参考[6]</p>\r\n\r\n<p>2、在编译安装python3时，使用pip安装库文件容易报出ssl缺失的错误，所以在编译时最好加上--with-ssl</p>\r\n\r\n<p>3、在使用make&amp;&amp;make install时出错可参考参考[3]</p>\r\n\r\n<p>4、安装Scrapy时出现报错ModuleNotFoundError: No module named &#39;_ctypes&#39;，可参考参考[4]</p>',1,7),(23,36,'2018-10-16 12:43:10','<p>怎么在Linux下手动安装python库？</p>',1,7),(24,36,'2018-10-16 12:48:59','<p>还有在虚拟环境下如何安装</p>\r\n\r\n<p>&nbsp;</p>',1,7),(25,36,'2018-10-16 12:50:59','<p><a href=\"https://blog.csdn.net/e15273/article/details/79649751\">手动安装Python库或安装第三方库的方法</a></p>',1,7),(26,32,'2018-10-16 12:53:51','<p>Linux下居然有中文：</p>\r\n\r\n<p>最常用的 git 命令有：<br />\r\n&nbsp; &nbsp;add &nbsp; &nbsp; &nbsp; &nbsp;添加文件内容至索引<br />\r\n&nbsp; &nbsp;bisect &nbsp; &nbsp; 通过二分查找定位引入 bug 的变更<br />\r\n&nbsp; &nbsp;branch &nbsp; &nbsp; 列出、创建或删除分支<br />\r\n&nbsp; &nbsp;checkout &nbsp; 检出一个分支或路径到工作区<br />\r\n&nbsp; &nbsp;clone &nbsp; &nbsp; &nbsp;克隆一个版本库到一个新目录<br />\r\n&nbsp; &nbsp;commit &nbsp; &nbsp; 记录变更到版本库<br />\r\n&nbsp; &nbsp;diff &nbsp; &nbsp; &nbsp; 显示提交之间、提交和工作区之间等的差异<br />\r\n&nbsp; &nbsp;fetch &nbsp; &nbsp; &nbsp;从另外一个版本库下载对象和引用<br />\r\n&nbsp; &nbsp;grep &nbsp; &nbsp; &nbsp; 输出和模式匹配的行<br />\r\n&nbsp; &nbsp;init &nbsp; &nbsp; &nbsp; 创建一个空的 Git 版本库或重新初始化一个已存在的版本库<br />\r\n&nbsp; &nbsp;log &nbsp; &nbsp; &nbsp; &nbsp;显示提交日志<br />\r\n&nbsp; &nbsp;merge &nbsp; &nbsp; &nbsp;合并两个或更多开发历史<br />\r\n&nbsp; &nbsp;mv &nbsp; &nbsp; &nbsp; &nbsp; 移动或重命名一个文件、目录或符号链接<br />\r\n&nbsp; &nbsp;pull &nbsp; &nbsp; &nbsp; 获取并合并另外的版本库或一个本地分支<br />\r\n&nbsp; &nbsp;push &nbsp; &nbsp; &nbsp; 更新远程引用和相关的对象<br />\r\n&nbsp; &nbsp;rebase &nbsp; &nbsp; 本地提交转移至更新后的上游分支中<br />\r\n&nbsp; &nbsp;reset &nbsp; &nbsp; &nbsp;重置当前HEAD到指定状态<br />\r\n&nbsp; &nbsp;rm &nbsp; &nbsp; &nbsp; &nbsp; 从工作区和索引中删除文件<br />\r\n&nbsp; &nbsp;show &nbsp; &nbsp; &nbsp; 显示各种类型的对象<br />\r\n&nbsp; &nbsp;status &nbsp; &nbsp; 显示工作区状态<br />\r\n&nbsp; &nbsp;tag &nbsp; &nbsp; &nbsp; &nbsp;创建、列出、删除或校验一个GPG签名的 tag 对象</p>',1,7),(27,32,'2018-10-17 04:37:09','<p>我在github上建立了一个<a href=\"https://github.com/E-L-33/resource-library\">resource-library</a>,每次添加一点文件push以后是推送整个仓库吗，还是最新的版本</p>',1,7),(28,38,'2018-10-17 06:02:36','<p>--skip-broken是做什么的</p>\r\n\r\n<p>yum clean all的作用</p>\r\n\r\n<p>&nbsp;</p>',1,7),(29,38,'2018-10-17 06:34:13','<p>无果，专注重点，放一放先</p>',1,7),(30,38,'2018-10-17 06:51:31','<p>参考链接</p>\r\n\r\n<p>[1]、<a href=\"https://blog.csdn.net/hanchaoqi/article/details/45102693\">fedora20系统安装及配置</a></p>\r\n\r\n<p>[2]、<a href=\"https://blog.csdn.net/u013395878/article/details/51966215\">再一篇centos下的 rpm 与yum 安装方法 （详解）</a></p>',1,7),(31,38,'2018-10-17 06:52:25','<p>[3]、<a href=\"https://linux.cn/article-7623-1.html\">Linux 上 10 个最好的 Markdown 编辑器</a></p>',1,7),(32,38,'2018-10-17 07:42:24','<p>我佛了，改装haroopad <a href=\"https://github.com/caojx-git/learn/blob/master/notes/markdown/Centos7%20%E4%B8%AD%E5%AE%89%E8%A3%85haroopad.md\">install haroopad on linux by tar.gz</a></p>',1,7),(33,39,'2018-10-17 14:51:08','<p>今天还查了做表格、反引号</p>',1,7),(34,40,'2018-10-19 01:38:13','<p><a href=\"https://blog.csdn.net/h12kjgj/article/details/77187304\">MYSQL导出数据出现The MySQL server is running with the --secure-file-priv option</a></p>',1,7),(35,40,'2018-10-19 11:53:06','<p>background: url(..) no-repeat center center fixed;</p>\r\n\r\n<p>有点意思</p>',1,7),(37,36,'2018-10-20 14:10:05','<p><a href=\"https://www.cnblogs.com/simuhunluo/p/7704765.html?tdsourcetag=s_pctim_aiomsg\">CentOS安装Python3傻瓜教程</a></p>',1,7),(38,40,'2018-10-20 15:35:50','<p>今日热门阅读里面只会出现当日新建的文章，或者说新建read_nub（还是read_detail）的文章</p>',1,7),(39,40,'2018-10-21 03:42:05','<p>如果你希望学习商业，阅读洛克&middot;菲勒和卡内基的传记，了解阿姆斯特丹成立的第一家交易所，90年代的垃圾债券泡沫，金融危机，每一次经济衰退。每一次经济衰退都是再一次经济繁荣的发源地。</p>\r\n\r\n<p>　　阅读彼得&middot;蒂尔撰写的&ldquo;<a href=\"http://www.amazon.cn/%E4%BB%8E0%E5%88%B01-%E5%BC%80%E5%90%AF%E5%95%86%E4%B8%9A%E4%B8%8E%E6%9C%AA%E6%9D%A5%E7%9A%84%E7%A7%98%E5%AF%86-%E5%BD%BC%E5%BE%97%C2%B7%E8%92%82%E5%B0%94/dp/B00RWP6BOU/\" target=\"_blank\">从零到一</a>&rdquo;这本书。在 CNBC 电视网上观看&ldquo;The Profit&rdquo;专栏节目。阅读苹果公司创始人史蒂夫&middot;乔布斯的传记。阅读《<a href=\"http://www.amazon.cn/%E6%9D%83%E5%8A%9B%E7%9A%84%E7%BB%88%E7%BB%93-%E6%9D%83%E5%8A%9B%E6%AD%A3%E5%9C%A8%E5%A4%B1%E5%8E%BB-%E4%B8%96%E7%95%8C%E5%A6%82%E4%BD%95%E8%BF%90%E8%BD%AC-%E8%8E%AB%E4%BC%8A%E5%A1%9E%E6%96%AF%E2%80%A2%E7%BA%B3%E4%BC%8A%E5%A7%86/dp/B00EF12FV2/\" target=\"_blank\">权力的终结</a>》了解柯达如何衰落。</p>\r\n\r\n<p>　　不要阅读那些自助型商业书籍。它们没有什么价值。你己经进入一个广阔的领域 - 创新领域 - 现代社会创建的一个领域。不要读去年刚刚出版的平庸作品。</p>\r\n\r\n<p>　　再进一步，你可以阅读一些有关通过创新如何将世界变成今天这个形态的著作。</p>\r\n\r\n<p>　　阅读亨利&middot;福特如何从创办三家汽车公司起家，最终怎样找到正确发展之路，而且你还需要知道为什么&ldquo;三&rdquo;对于亨利&middot;福特而言，是一个重要的数字。</p>\r\n\r\n<p>　　阅读了解为什么雷&middot;克拉克的技巧成就了世界上最大的特许加盟连锁餐饮企业 - 麦当劳。阅读可口可乐如何通过不生产任何东西，却造就了世界上最大的饮料公司。</p>\r\n\r\n<p>　　把你从这些阅读中收获的东西记录下来</p>',1,7),(40,40,'2018-10-21 03:53:54','<p><a href=\"https://www.cnblogs.com/lianglife/p/5240711.html\">什么是真正的程序员</a></p>',1,7),(41,40,'2018-10-21 03:54:30','<p>那我是不是可以专门开辟一个用来分享这类文章的人</p>\r\n\r\n<p>&nbsp;</p>',1,7),(42,40,'2018-10-21 03:59:08','<p>爬虫实验楼刷分</p>\r\n\r\n<p>&nbsp;</p>',1,7),(43,40,'2018-10-21 09:15:44','<p>不太那么容易接受自己</p>\r\n\r\n<p>&nbsp;</p>',1,7),(44,40,'2018-10-23 06:35:28','<p>链接: https://pan.baidu.com/s/1ecphme2h7W4JgiEu11TJyw 提取码: 6d8t</p>\r\n\r\n<p>&nbsp;</p>',1,7),(45,40,'2018-10-23 07:11:28','<p>数据库中的\\G</p>',1,7),(46,40,'2018-10-23 08:08:43','<p>MySQL</p>\r\n\r\n<p>upper&nbsp; &nbsp; 大写</p>\r\n\r\n<p>lower&nbsp; &nbsp; 小写</p>\r\n\r\n<p>round&nbsp; &nbsp; 小数点后保留几位</p>\r\n\r\n<p>distinct&nbsp; &nbsp; 去重</p>',1,7),(47,40,'2018-10-24 02:38:33','<p>文章分类可以用标签标记而不是简单的分类，这样的话可以满足多类的需求</p>\r\n\r\n<p>&nbsp;</p>',1,7),(48,40,'2018-10-24 03:07:54','<p>深圳彩讯公司哈哈哈哈</p>',1,7),(49,40,'2018-10-25 03:11:25','<p><a href=\"https://blog.csdn.net/amds123/article/details/70158294\">Terminator的安装和简介</a></p>',1,7),(50,40,'2018-10-25 09:08:49','<p><a href=\"http://clsn.io/\">http://clsn.io/</a>可参考</p>',1,7),(51,40,'2018-10-26 10:02:21','<p><a href=\"https://www.cnblogs.com/dreamworlds/p/5478293.html\">MySQL操作日志</a></p>',1,7),(52,40,'2018-10-26 10:04:30','<p><a href=\"http://www.cnblogs.com/kerrycode/p/7130403.html\" id=\"cb_post_title_url\">MySQL查询日志总结</a></p>',1,7),(53,40,'2018-10-26 10:05:01','<p><a href=\"https://www.cnblogs.com/livingintruth/p/3433259.html\">让MySQL支持中文</a></p>',1,7),(54,40,'2018-10-26 10:05:24','<p>CSMA/CD</p>',1,7),(55,40,'2018-10-26 10:05:53','<p><a href=\"https://blog.csdn.net/qq_15037231/article/details/79623195\">python判断字典，列表，元组为空的方法。</a></p>',1,7),(56,40,'2018-10-26 10:06:41','<p>Linux知识体系&nbsp; &nbsp; &nbsp;启动的几个阶段</p>\r\n\r\n<p>&nbsp;</p>',1,7),(57,40,'2018-10-26 10:08:13','<p><a href=\"https://www.cnblogs.com/vincently/p/4526560.html\" id=\"cb_post_title_url\">【经典数据结构】B树与B+树</a></p>',1,7),(58,40,'2018-10-27 01:08:58','<p><a href=\"https://blog.csdn.net/baidu_21088863/article/details/52223995\">python核心编程学习笔记-2016-08-16-01-可调用对象</a></p>',1,7),(59,40,'2018-10-27 01:26:27','<p><a href=\"https://blog.csdn.net/baidu_21088863/article/category/6318209\">python核心编程</a></p>\r\n\r\n<p>--&gt;：</p>',1,7),(60,40,'2018-10-27 01:56:25','<p><a href=\"http://www.ityouknow.com/other/2018/09/16/create-blog.html\">新博客方案</a></p>',1,7),(61,40,'2018-10-27 03:06:55','<p><a href=\"https://www.cnblogs.com/shuaihe/articles/8550108.html\" id=\"cb_post_title_url\">Linux命令行下&rdquo;!&rdquo;的十个神奇用法</a></p>',1,7),(62,40,'2018-10-27 03:36:08','<p>链接: https://pan.baidu.com/s/1aztediJlh7wwel0cZo77jw 提取码: d3p6</p>',1,7),(63,40,'2018-10-31 08:57:31','<p><a href=\"http://www.cnblogs.com/tylerdonet/p/3520862.html\">$.ajax()方法详解</a></p>\r\n\r\n<p>&nbsp;</p>',1,7),(64,40,'2018-10-31 09:02:09','<p><a href=\"https://www.cnblogs.com/iamjqy/p/7000874.html\" id=\"cb_post_title_url\">Ubuntu 16.04安装PyCharm</a></p>',1,7),(65,40,'2018-11-01 08:40:38','<p><a href=\"https://www.cnblogs.com/zongfa/p/7988968.html\" id=\"cb_post_title_url\">linux下创建virtualenv时指定python版本</a></p>',1,7),(66,40,'2018-11-01 11:40:05','<p><a href=\"http://gitbook.liuhui998.com/\">Git Community Book 中文版</a></p>',1,7),(67,40,'2018-11-02 02:31:30','<p><a href=\"https://blog.csdn.net/lu_embedded/article/details/81100704\">GitBook 从懵逼到入门</a></p>',1,7),(68,40,'2018-11-02 09:06:14','<p><a href=\"https://www.cnblogs.com/huchong/p/7819296.html\" id=\"cb_post_title_url\">Django----中间件详解</a></p>',1,7),(69,40,'2018-11-02 09:45:28','<p><a href=\"https://www.cnblogs.com/feng9exe/p/5598737.html\" id=\"cb_post_title_url\">ORM原型概念</a></p>\r\n\r\n<p><strong>&lt;1&gt;什么是ORM?</strong></p>\r\n\r\n<p>解释这个名词并不难.先了解一下ORM由来. 其实ORM的需求真正由来是在随着面向对象OO编程开发方法发展而产生的. 如今面向对象[Object]的OO编程已经成为企业级开发中主流开发方法. 而关系型数据库也成为企业级应用环境中永久存放数据的主流数据存储系统. 其实到这你应该明白. 同样的数据一个是在实际编程中一Object面向对象方式体现, 而另外一种就是把这种内存对象持久化存储到硬盘文件上.&nbsp;&nbsp;</p>\r\n\r\n<p>由此可以说<strong><span style=\"color:#2ecc71\">对象[Object]和关系数据是业务实体的 两种不同表现形式.业务实体Object在内存中表现为对象，在数据库中表现为关系数据.</span></strong></p>\r\n\r\n<p>内存中的对象之间存在关联和继承关系，而在数据库中，关系数据无法直接表达多对多关联和继承关系。因此，对象-关系映射(ORM)系统一般以中间件的形式存在，主要实现程序对象到关系数据库数据的映射</p>',1,7),(70,40,'2018-11-02 09:47:21','<p>CSRF跨域请求保护</p>\r\n\r\n<p>A站为正常网站，B站为病毒网站，当我先访问A站，本地浏览器会记录cookies在本地，之后访问B站，B站会窃取我的cookies，然后通过我的cookies就可以冒名访问A站中我的账户。这就是CSRF跨站请求伪造攻击。</p>',1,7),(71,40,'2018-11-02 09:49:07','<p><a href=\"https://www.jianshu.com/p/1a95808faed9\">Django 的登录登出功能</a></p>',1,7),(72,40,'2018-11-02 09:52:36','<p><a href=\"https://www.cnblogs.com/shijingjing07/p/5321198.html\">类对象、静态方法和类方法&nbsp; &nbsp;</a></p>\r\n\r\n<p>那么静态方法和函数有什么区别</p>',1,7),(73,40,'2018-11-02 11:14:39','<p><strong>apt = apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</strong></p>',1,7),(74,40,'2018-11-02 11:18:41','<p><a href=\"https://blog.csdn.net/m0_38044196/article/details/72844025\">Linux目录结构及详细介绍</a></p>',1,7),(75,12,'2018-11-02 12:27:32','<p>/mnt&nbsp;系统提供这个目录是让用户临时挂载其他的文件系统</p>',1,7),(76,12,'2018-11-02 12:28:28','<p>Dev存放的设备文件</p>\r\n\r\n<p>&nbsp;</p>',1,7),(77,40,'2018-11-03 04:08:04','<p><a href=\"http://www.99lib.net/article/2998.htm\">熊德启-阿拉斯加往事</a></p>',1,7),(78,40,'2018-11-04 07:04:10','<p><a href=\"https://www.cnblogs.com/zongfa/p/7988968.html\" id=\"cb_post_title_url\">linux下创建virtualenv时指定python版本</a></p>',1,7),(79,40,'2018-11-04 08:42:15','<p><a href=\"https://www.cnblogs.com/shizhengwen/p/6588834.html\">Django的Model操作</a></p>',1,7),(80,40,'2018-11-04 08:50:19','<p><a href=\"https://blog.csdn.net/liang_0609/article/details/52786044?locationNum=16&amp;fps=1\">MYSQL面试选择题15道（单选）</a></p>',1,7),(81,40,'2018-11-04 08:53:09','<p><a href=\"https://cloud.tencent.com/developer/ask/49532\">如何在Django模型中指定MySQL ENUM？</a></p>',1,7),(82,40,'2018-11-05 06:26:54','<p><a href=\"https://blog.csdn.net/imvainiycos/article/details/81844539\">油猴脚本(Tampermonkey)的获取与简单使用</a></p>',1,7),(83,40,'2018-11-05 06:36:57','<p><a href=\"https://www.zhihu.com/question/41201984\">百度云视频在线加速播放</a></p>',1,7),(84,40,'2018-11-05 09:13:18','<p><a href=\"https://blog.csdn.net/qq_39362996/article/details/80922254\">百度云网盘在线播放视频速度加快的方法</a></p>',1,7),(85,40,'2018-11-05 09:14:43','<p>https://blog.csdn.net/qq_39362996/article/details/80922254</p>',1,7),(86,40,'2018-11-05 09:37:05','<p>videojs.getPlayers(&quot;video-player&quot;).html5player.tech_.setPlaybackRate(2)</p>',1,7),(87,40,'2018-11-05 09:41:17','<p>我可以录个视频</p>',1,7),(88,40,'2018-11-05 09:53:57','<p>#视频速度测试</p>\r\n\r\n<p>import time<br />\r\nimport random</p>\r\n\r\n<p>for i in range(10000):<br />\r\n&nbsp; &nbsp; a = random.random()<br />\r\n&nbsp; &nbsp; time.sleep(1)<br />\r\n&nbsp; &nbsp; print(a)</p>',1,7),(90,40,'2018-11-06 09:32:28','<p>---------2018/11/04---------<br />\r\nmarkdown配置<br />\r\n考虑一下流程的问题：<br />\r\n1、Django的作业<br />\r\n2、python基础梳理一遍<br />\r\n3、mysql基础的笔记需要总结一下了<br />\r\n4、然后是Linux，基础的大概的笔记<br />\r\n5、mongodb<br />\r\n6、redis<br />\r\n7、Django，等开始看文档 &nbsp; &nbsp;pycharm配置<br />\r\n8、这里会分化一下，如果开始讲爬虫就学爬虫，后面再考虑前端bootstrap和js的问题，如果还没有开始那就<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 8.1、bootstrap基础完善到进阶<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 8.2、js基础<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 8.3、django-resultful<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 8.4、vue基础<br />\r\n==数据结构与算法，每天一点？但是总是不上心执行不了，得想想办法解决</p>\r\n\r\n<p><br />\r\n===除此还可能需要涉及的<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 1、Fiddler工具的使用（可以放到爬虫阶段进行）<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 2、高等数学、线性代数、概率论与数理统计（可以放到爬虫阶段，但是考虑到内容庞杂，得适当调度）<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; 3、机器学习入门TensorFlow<br />\r\n&nbsp;</p>',1,7),(91,40,'2018-11-06 10:01:39','<p>布洛芬</p>',1,7),(92,40,'2018-11-06 12:50:21','<p>http://templatemo.com/page/1</p>',1,7),(93,40,'2018-11-07 05:19:19','<p><a href=\"https://blog.csdn.net/u014028063/article/details/81978804\">动画演示10个有趣但毫无用处的Linux命令</a></p>',1,7),(94,40,'2018-11-07 05:58:32','<p>https://devdocs.io/</p>',1,7),(95,40,'2018-11-07 06:22:08','<p><a href=\"https://cloud.tencent.com/developer/article/1138480\">JupyterLab&mdash;&mdash;更具生产力的Jupyter环境</a></p>',1,7),(98,40,'2018-11-10 09:32:53','<p><a href=\"https://blog.csdn.net/wonengguwozai/article/details/53122629\">linux强大的convert命令(可以对图像做各种处理！)</a></p>',1,7),(99,40,'2018-11-12 03:14:41','<p>Django的模板，传递 list，如何提取 list 中的某个元素而不是遍历？</p>\r\n\r\n<p>{{xxx.1}}#1代表索引，xxx代表list</p>',1,7),(100,40,'2018-11-12 09:41:15','<p>在使用Git进行合作的时候，在合并多个分支之前建议检查一下各个文件的大致安放和使用规范，有些人把所以文件都丢在公共文件夹里，完了合并会很脑壳疼</p>',1,7),(101,40,'2018-11-13 09:43:32','<p>问题：django.db.utils.OperationalError: (1050, &quot;Table &#39;auth_permission&#39; already exists&quot;) The Python REPL process has exited</p>\r\n\r\n<p>解决：</p>\r\n\r\n<p style=\"margin-left:0px; margin-right:0px\"><span style=\"color:#242729\"><span style=\"background-color:#ffffff\">该auth_permissions表已存在于您的数据库中，但迁移认为它不存在。尝试伪造迁移以超越这一点。</span></span></p>\r\n\r\n<p><span style=\"background-color:#eff0f1\"><span style=\"color:#242729\">./manage.py migrate auth --fake</span></span></p>',1,7),(102,32,'2018-11-14 01:51:38','<p>提示版本落后远程库版本，用git push -f origin master的-f参数强制推送</p>',1,7),(103,32,'2018-11-14 08:41:47','<p>git下载指定分支</p>\r\n\r\n<p>git&nbsp;clone&nbsp;-b&nbsp;xxxx URL</p>',1,7),(104,40,'2018-11-16 01:30:45','<p><a href=\"https://blog.csdn.net/Hoshea_chx/article/details/78826689\">用Hexo + github搭建自己的博客 --- 再也不用羡慕别人了！</a></p>',1,7),(105,40,'2018-11-16 06:08:56','<p>http://www.stormjie.top/#</p>',1,7),(106,40,'2018-11-16 06:09:20','<p><a href=\"https://www.bougieblog.cn/\">https://www.bougieblog.cn/</a></p>',1,7),(107,40,'2018-11-16 08:11:48','<p><a href=\"https://blog.csdn.net/au55555/article/details/80547410\">Django项目订单接入支付宝</a></p>',1,7),(108,40,'2018-11-18 13:28:53','<p>㈠.Python 是如何进行内存管理的？ 答:从三个方面来说,一对象的引用计数机制,二垃圾回收机制,三内存池机制 ⒈对象的引用计数机制 Python 内部使用引用计数，来保持追踪内存中的对象，所有对象都有引用计数。 引用计数增加的情况： ❶一个对象分配一个新名称 ❷将其放入一个容器中（如列表、元组或字典） 引用计数减少的情况： ❶使用 del 语句对对象别名显示的销毁 ❷引用超出作用域或被重新赋值 sys.getrefcount( )函数可以获得对象的当前引用计数 多数情况下，引用计数比你猜测得要大得多。对于不可变数据（如数字和字符串），解释器会在程序的 不同部分共享内存，以便节约内存。 ⒉垃圾回收 ❶当一个对象的引用计数归零时，它将被垃圾收集机制处理掉。 ❷当两个对象 a 和 b 相互引用时，del 语句可以减少 a 和 b 的引用计数，并销毁用于引用底层对象的名 称。然而由于每个对象都包含一个对其他对象的应用， 因此引用计数不会归零，对象也不会销毁。（从而导致内存泄露）。为解决这一问题，解释器会定期执 行一个循环检测器，搜索不可访问对象的循环并删除它们。 ⒊内存池机制 Python 提供了对内存的垃圾收集机制，但是它将不用的内存放到内存池而不是返回给操作系统。 ❶Pymalloc 机制。为了加速 Python 的执行效率，Python 引入了一个内存池机制，用于管理对小块内存 的申请和释放。 ❷Python 中所有小于 256 个字节的对象都使用 pymalloc 实现的分配器，而大的对象则使用系统的 malloc。 ❸对于 Python 对象，如整数，浮点数和 List，都有其独立的私有内存池，对象间不共享他们的内存池。 也就是说如果你分配又释放了大量的整数，用于缓存这些整数的内存就不能再分配给浮点数。 ㈡什么是 lambda 函数？它有什么好处? 答：lambda 表达式，通常是在需要一个函数，但是又不想费神去命名一个函数的场合下使用，也就是指 匿名函数 lambda 函数：首要用途是指点短小的回调函数 lambda [arguments]:expression &gt;&gt;&gt; a=lambdax,y:x+y &gt;&gt;&gt; a(3,11) ㈢Python 里面如何实现 tuple 和 list 的转换？ 答：直接使用 tuple 和 list 函数就行了，type()可以判断对象的类型 ㈣请写出一段 Python 代码实现删除一个 list 里面的重复元素 答： 1. 使用 set 函数，set(list) 2. 使用字典函数， &gt;&gt;&gt;a=[1,2,4,2,4,5,6,5,7,8,9,0] &gt;&gt;&gt; b={} &gt;&gt;&gt;b=b.fromkeys(a) &gt;&gt;&gt;c=list(b.keys()) &gt;&gt;&gt; c ㈤编程用 sort 进行排序，然后从最后一个元素开始判断 a=[1,2,4,2,4,5,7,10,5,5,7,8,9,0,3] a.sort() last=a[-1] for i inrange(len(a)-2,-1,-1): if last==a: del a else:last=a print(a) ㈥Python 里面如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别） 答：赋值（=），就是创建了对象的一个新的引用，修改其中任意一个变量都会影响到另一个。 浅拷贝：创建一个新的对象，但它包含的是对原始对象中包含项的引用（如果用引用的方式修改其中一 个对象，另外一个也会修改改变）{1,完全切片方法；2，工厂函数，如 list()；3，copy 模块的 copy() 函数} 深拷贝：创建一个新的对象，并且递归的复制它所包含的对象（修改其中一个，另外一个不会改变）{copy 模块的 deep.deepcopy()函数} ㈦介绍一下 except 的用法和作用？ 答：try&hellip;except&hellip;except&hellip;[else&hellip;][finally&hellip;] 执行 try 下的语句，如果引发异常，则执行过程会跳到 except 语句。对每个 except 分支顺序尝试执行， 如果引发的异常与 except 中的异常组匹配，执行相应的语句。 如果所有的 except 都不匹配，则异常会传递到下一个调用本代码的最高层 try 代码中。 try 下的语句正常执行，则执行 else 块代码。如果发生异常，就不会执行 如果存在 finally 语句，最后总是会执行。 ㈧Python 中 pass 语句的作用是什么？ 答：pass 语句不会执行任何操作，一般作为占位符或者创建占位程序，whileFalse:pass ㈨介绍一下 Python 下 range()函数的用法？ 答：列出一组数据，经常用在 for in range()循环中 ㈩如何用 Python 来进行查询和替换一个文本字符串？ 答：可以使用 re 模块中的 sub()函数或者 subn()函数来进行查询和替换， 格式：sub(replacement, string[,count=0])（replacement 是被替换成的文本，string 是需要被替换 的文本，count 是一个可选参数，指最大被替换的数量） &gt;&gt;&gt; import re &gt;&gt;&gt;p=re.compile(&lsquo;blue|white|red&rsquo;) &gt;&gt;&gt;print(p.sub(&lsquo;colour&rsquo;,&#39;blue socks and red shoes&rsquo;)) colour socks and colourshoes &gt;&gt;&gt;print(p.sub(&lsquo;colour&rsquo;,&#39;blue socks and red shoes&rsquo;,count=1)) colour socks and redshoes subn()方法执行的效果跟 sub()一样，不过它会返回一个二维数组，包括替换后的新的字符串和总共替 换的数量 （十一）Python 里面 match()和 search()的区别？ 答：re 模块中 match(pattern,string[,flags]),检查 string 的开头是否与 pattern 匹配。 re 模块中 re.search(pattern,string[,flags]),在 string 搜索 pattern 的第一个匹配值。 &gt;&gt;&gt;print(re.match(&lsquo;super&rsquo;, &lsquo;superstition&rsquo;).span()) (0, 5) &gt;&gt;&gt;print(re.match(&lsquo;super&rsquo;, &lsquo;insuperable&rsquo;)) None &gt;&gt;&gt;print(re.search(&lsquo;super&rsquo;, &lsquo;superstition&rsquo;).span()) (0, 5) &gt;&gt;&gt;print(re.search(&lsquo;super&rsquo;, &lsquo;insuperable&rsquo;).span()) (2, 7) （十二）用 Python 匹配 HTML tag 的时候，和有什么区别？ 答：术语叫贪婪匹配( )和非贪婪匹配( ) 例如: test : test : （十三）Python 里面如何生成随机数？ 答：random 模块 随机整数：random.randint(a,b)：返回随机整数 x,a&lt;=x&lt;=b random.randrange(start,stop,[,step])：返回一个范围在(start,stop,step)之间的随机整数，不包括 结束值。 随机实数：random.random( ):返回 0 到 1 之间的浮点数 random.uniform(a,b):返回指定范围内的浮点数。 （十四）有没有一个工具可以帮助查找 python 的 bug 和进行静态的代码分析？ 答：PyChecker 是一个 python 代码的静态分析工具，它可以帮助查找 python 代码的 bug, 会对代码的复 杂度和格式提出警告 Pylint 是另外一个工具可以进行 codingstandard 检查 （十五）如何在一个 function 里面设置一个全局的变量？ 答：解决方法是在 function 的开始插入一个 global 声明： def f() global x （十六）单引号，双引号，三引号的区别 答：单引号和双引号是等效的，如果要换行，需要符号(\\),三引号则可以直接换行，并且可以包含注释 如果要表示 Let&rsquo;s go 这个字符串 单引号：s4 = &lsquo;Let\\&rsquo;s go&rsquo; 双引号：s5 = &ldquo;Let&rsquo;s go&rdquo; s6 = &lsquo;I realy like&ldquo;python&rdquo;!&rsquo; 这就是单引号和双引号都可以表示字符串的原因了 免费领取本视频的相关源码资料与最前沿 IT 技术，请添加 QQ 3240374918 关注微信公众账号：黑马程序员视频库（itheima520）获取相应的教程及配套学习软 件 ； 扫码关注 传智播客旗下视频教程首发微信公众平台</p>',1,7),(109,40,'2018-11-18 13:29:26','<p>python面试的16个问题</p>',1,7),(110,40,'2018-11-18 13:30:50','<p>1. 到底什么是 Python？你可以在回答中与其他技术进行对比 下面是一些关键点： Python 是一种解释型语言。这就是说，与 C 语言和 C 的衍生语言不同，Python 代码在运行 之前不需要编译。其他解释型语言还包括 PHP 和 Ruby。 Python 是动态类型语言，指的是你在声明变量时，不需要说明变量的类型。你可以直接编 写类似 x=111 和 x=&quot;I&#39;m a string&quot;这样的代码，程序不会报错。 Python 非常适合面向对象的编程（OOP），因为它支持通过组合（composition）与继承 （inheritance）的方式定义类（class）。 Python 中没有访问说明符（access specifier，类似 C++中的 public 和 private）， 这么设计的依据是&ldquo;大家都是成年人了&rdquo;。 在 Python 语言中，函数是第一类对象（first-class objects）。这指的是它们可以被指定给变 量，函数既能返回函数类型，也可以接受函数作为输入。类（class）也是第一类对象。 Python 代码编写快，但是运行速度比编译语言通常要慢。好在 Python 允许加入基于 C 语言 编写的扩展，因此我们能够优化代码，消除瓶颈，这点通常是可以实现的。 numpy 就是一个很好地例子，它的运行速度真的非常快，因为很多算术运算其实并不 是通过 Python 实现的。 Python 用途非常广泛&mdash;&mdash;网络应用，自动化，科学建模，大数据应用，等等。它也常被用 作&ldquo;胶水语言&rdquo;，帮助其他语言和组件改善运行状况。 Python 让困难的事情变得容易，因此程序员可以专注于算法和数据结构的设计，而不用处 理底层的细节。 为什么提这个问题：如果你应聘的是一个 Python 开发岗位，你就应该知道这是门什 么样的语言，以及它为什么这么酷。以及它哪里不好。 2.什么是 PEP8？ PEP8 是一个编程规范，内容是一些关于如何让你的程序更具可读性的建议。 3.什么是 pickling 和 unpickling？ Pickle 模块读入任何 Python 对象，将它们转换成字符串，然后使用 dump 函数将其转储到一 个文件中&mdash;&mdash;这个过程叫做 pickling。 反之从存储的字符串文件中提取原始 Python 对象的过程，叫做 unpickling。 4.Python 是如何被解释的？ Python 是一种解释性语言，它的源代码可以直接运行。Python 解释器会将源代码转换成中 间语言，之后再翻译成机器码再执行。 5.Python 是怎样管理内存的？ Python 的内存管理是由私有 heap 空间管理的。所有的 Python 对象和数据结构都在一个私 有 heap 中。程序员没有访问该 heap 的权限，只有解释器才能对它进行操作。 为 Python 的 heap 空间分配内存是由 Python 的内存管理模块进行的，其核心 API 会提供一 些访问该模块的方法供程序员使用。 Python 有自带的垃圾回收系统，它回收并释放没有被使用的内存，让它们能够被其他程序 使用。 6.有哪些工具可以帮助 debug 或做静态分析？ PyChecker 是一个静态分析工具，它不仅能报告源代码中的错误，并且会报告错误类型和复 杂度。Pylint 是检验模块是否达到代码标准的另一个工具。 7.什么是 Python 装饰器？ Python 装饰器是 Python 中的特有变动，可以使修改函数变得更容易。 8.数组和元组之间的区别是什么？ 数组和元组之间的区别：数组内容是可以被修改的，而元组内容是只读的。另外，元组可以 被哈希，比如作为字典的关键字。 9.参数按值传递和引用传递是怎样实现的？ Python 中的一切都是类，所有的变量都是一个对象的引用。引用的值是由函数确定的，因 此无法被改变。但是如果一个对象是可以被修改的，你可以改动对象。 10.字典推导式和列表推导式是什么？ 它们是可以轻松创建字典和列表的语法结构。 11.Python 都有哪些自带的数据结构？ Python 自带的数据结构分为可变的和不可变的。可变的有：数组、集合、字典；不可变的 有：字符串、元组、数。 12.什么是 Python 的命名空间？ 在 Python 中，所有的名字都存在于一个空间中，它们在该空间中存在和被操作&mdash;&mdash;这就是 命名空间。 它就好像一个盒子，每一个变量名字都对应装着一个对象。当查询变量的时候，会从该盒子 里面寻找相应的对象。 13.Python 中的 lambda 是什么？ 这是一个常被用于代码中的单个表达式的匿名函数。 14.为什么 lambda 没有语句？ 匿名函数 lambda 没有语句的原因，是它被用于在代码被执行的时候构建新的函数对象并且 返回。 15.Python 中的 pass 是什么？ Pass 是一个在 Python 中不会被执行的语句。在复杂语句中，如果一个地方需要暂时被留白， 它常常被用于占位符。 16.Python 中什么是遍历器？ 遍历器用于遍历一组元素，比如列表这样的容器。 17.Python 中的 unittest 是什么？ 在 Python 中，unittest 是 Python 中的单元测试框架。它拥有支持共享搭建、自动测试、在 测试中暂停代码、将不同测试迭代成一组，等等的功能。 18.在 Python 中什么是 slicing？ Slicing 是一种在有序的对象类型中（数组，元组，字符串）节选某一段的语法。 19.在 Python 中什么是构造器？ 生成器是实现迭代器的一种机制。它功能的实现依赖于 yield 表达式，除此之外它跟普通的 函数没有两样。 20.Python 中的 docstring 是什么？ Python 中文档字符串被称为 docstring，它在 Python 中的作用是为函数、模块和类注释生成 文档。 21.如何在 Python 中拷贝一个对象？ 如果要在 Python 中拷贝一个对象，大多时候你可以用 copy.copy()或者 copy.deepcopy()。但 并不是所有的对象都可以被拷贝。 22.Python 中的负索引是什么？ Python 中的序列索引可以是正也可以是负。如果是正索引，0 是序列中的第一个索引，1 是 第二个索引。如果是负索引，（-1）是最后一个索引而（-2）是倒数第二个索引。 23.如何将一个数字转换成一个字符串？ 你可以使用自带函数 str()将一个数字转换为字符串。如果你想要八进制或者十六进制数，可 以用 oct()或 hex()。 24.Xrange 和 range 的区别是什么？ Xrange 用于返回一个 xrange 对象，而 range 用于返回一个数组。不管那个范围多大，Xrange 都使用同样的内存。 25.Python 中的模块和包是什么？ 在 Python 中，模块是搭建程序的一种方式。每一个 Python 代码文件都是一个模块，并可以 引用其他的模块，比如对象和属性。 一个包含许多 Python 代码的文件夹是一个包。一个包可以包含模块和子文件夹。</p>',1,7),(111,40,'2018-11-18 13:31:32','<p>1. 到底什么是 Python？你可以在回答中与其他技术进行对比 下面是一些关键点： Python 是一种解释型语言。这就是说，与 C 语言和 C 的衍生语言不同，Python 代码在运行 之前不需要编译。其他解释型语言还包括 PHP 和 Ruby。 Python 是动态类型语言，指的是你在声明变量时，不需要说明变量的类型。你可以直接编 写类似 x=111 和 x=&quot;I&#39;m a string&quot;这样的代码，程序不会报错。 Python 非常适合面向对象的编程（OOP），因为它支持通过组合（composition）与继承 （inheritance）的方式定义类（class）。 Python 中没有访问说明符（access specifier，类似 C++中的 public 和 private）， 这么设计的依据是&ldquo;大家都是成年人了&rdquo;。 在 Python 语言中，函数是第一类对象（first-class objects）。这指的是它们可以被指定给变 量，函数既能返回函数类型，也可以接受函数作为输入。类（class）也是第一类对象。 Python 代码编写快，但是运行速度比编译语言通常要慢。好在 Python 允许加入基于 C 语言 编写的扩展，因此我们能够优化代码，消除瓶颈，这点通常是可以实现的。 numpy 就是一个很好地例子，它的运行速度真的非常快，因为很多算术运算其实并不 是通过 Python 实现的。 Python 用途非常广泛&mdash;&mdash;网络应用，自动化，科学建模，大数据应用，等等。它也常被用 作&ldquo;胶水语言&rdquo;，帮助其他语言和组件改善运行状况。 Python 让困难的事情变得容易，因此程序员可以专注于算法和数据结构的设计，而不用处 理底层的细节。 为什么提这个问题：如果你应聘的是一个 Python 开发岗位，你就应该知道这是门什 么样的语言，以及它为什么这么酷。以及它哪里不好。 2.什么是 PEP8？ PEP8 是一个编程规范，内容是一些关于如何让你的程序更具可读性的建议。 3.什么是 pickling 和 unpickling？ Pickle 模块读入任何 Python 对象，将它们转换成字符串，然后使用 dump 函数将其转储到一 个文件中&mdash;&mdash;这个过程叫做 pickling。 反之从存储的字符串文件中提取原始 Python 对象的过程，叫做 unpickling。 4.Python 是如何被解释的？ Python 是一种解释性语言，它的源代码可以直接运行。Python 解释器会将源代码转换成中 间语言，之后再翻译成机器码再执行。 5.Python 是怎样管理内存的？ Python 的内存管理是由私有 heap 空间管理的。所有的 Python 对象和数据结构都在一个私 有 heap 中。程序员没有访问该 heap 的权限，只有解释器才能对它进行操作。 为 Python 的 heap 空间分配内存是由 Python 的内存管理模块进行的，其核心 API 会提供一 些访问该模块的方法供程序员使用。 Python 有自带的垃圾回收系统，它回收并释放没有被使用的内存，让它们能够被其他程序 使用。 6.有哪些工具可以帮助 debug 或做静态分析？ PyChecker 是一个静态分析工具，它不仅能报告源代码中的错误，并且会报告错误类型和复 杂度。Pylint 是检验模块是否达到代码标准的另一个工具。 7.什么是 Python 装饰器？ Python 装饰器是 Python 中的特有变动，可以使修改函数变得更容易。 8.数组和元组之间的区别是什么？ 数组和元组之间的区别：数组内容是可以被修改的，而元组内容是只读的。另外，元组可以 被哈希，比如作为字典的关键字。 9.参数按值传递和引用传递是怎样实现的？ Python 中的一切都是类，所有的变量都是一个对象的引用。引用的值是由函数确定的，因 此无法被改变。但是如果一个对象是可以被修改的，你可以改动对象。 10.字典推导式和列表推导式是什么？ 它们是可以轻松创建字典和列表的语法结构。 11.Python 都有哪些自带的数据结构？ Python 自带的数据结构分为可变的和不可变的。可变的有：数组、集合、字典；不可变的 有：字符串、元组、数。 12.什么是 Python 的命名空间？ 在 Python 中，所有的名字都存在于一个空间中，它们在该空间中存在和被操作&mdash;&mdash;这就是 命名空间。 它就好像一个盒子，每一个变量名字都对应装着一个对象。当查询变量的时候，会从该盒子 里面寻找相应的对象。 13.Python 中的 lambda 是什么？ 这是一个常被用于代码中的单个表达式的匿名函数。 14.为什么 lambda 没有语句？ 匿名函数 lambda 没有语句的原因，是它被用于在代码被执行的时候构建新的函数对象并且 返回。 15.Python 中的 pass 是什么？ Pass 是一个在 Python 中不会被执行的语句。在复杂语句中，如果一个地方需要暂时被留白， 它常常被用于占位符。 16.Python 中什么是遍历器？ 遍历器用于遍历一组元素，比如列表这样的容器。 17.Python 中的 unittest 是什么？ 在 Python 中，unittest 是 Python 中的单元测试框架。它拥有支持共享搭建、自动测试、在 测试中暂停代码、将不同测试迭代成一组，等等的功能。 18.在 Python 中什么是 slicing？ Slicing 是一种在有序的对象类型中（数组，元组，字符串）节选某一段的语法。 19.在 Python 中什么是构造器？ 生成器是实现迭代器的一种机制。它功能的实现依赖于 yield 表达式，除此之外它跟普通的 函数没有两样。 20.Python 中的 docstring 是什么？ Python 中文档字符串被称为 docstring，它在 Python 中的作用是为函数、模块和类注释生成 文档。 21.如何在 Python 中拷贝一个对象？ 如果要在 Python 中拷贝一个对象，大多时候你可以用 copy.copy()或者 copy.deepcopy()。但 并不是所有的对象都可以被拷贝。 22.Python 中的负索引是什么？ Python 中的序列索引可以是正也可以是负。如果是正索引，0 是序列中的第一个索引，1 是 第二个索引。如果是负索引，（-1）是最后一个索引而（-2）是倒数第二个索引。 23.如何将一个数字转换成一个字符串？ 你可以使用自带函数 str()将一个数字转换为字符串。如果你想要八进制或者十六进制数，可 以用 oct()或 hex()。 24.Xrange 和 range 的区别是什么？ Xrange 用于返回一个 xrange 对象，而 range 用于返回一个数组。不管那个范围多大，Xrange 都使用同样的内存。 25.Python 中的模块和包是什么？ 在 Python 中，模块是搭建程序的一种方式。每一个 Python 代码文件都是一个模块，并可以 引用其他的模块，比如对象和属性。 一个包含许多 Python 代码的文件夹是一个包。一个包可以包含模块和子文件夹。&nbsp;</p>',1,7),(112,40,'2018-11-20 03:11:46','<p><a href=\"http://doc.codingdict.com/python_352/index.html\">http://doc.codingdict.com/python_352/index.html</a></p>',1,7),(113,40,'2018-11-20 10:40:19','<p><a href=\"http://www.runoob.com/bootstrap/bootstrap-collapse-plugin.html\">http://www.runoob.com/bootstrap/bootstrap-collapse-plugin.html</a></p>',1,7),(114,40,'2018-11-21 07:41:28','<p>常用的css效果：</p>\r\n\r\n<p>阴影：</p>\r\n\r\n<p>-moz-box-shadow: 1px 2px 2px #333232;</p>\r\n\r\n<p>-webkit-box-shadow: 1px 2px 2px #333232;</p>\r\n\r\n<p>box-shadow: 1px 2px 2px #333232;</p>\r\n\r\n<p>/*box-shadow:阴影水平偏移值（可取正负值）； 阴影垂直偏移值（可取正负值）；阴影模糊值；阴影颜色；*/</p>\r\n\r\n<p><a href=\"https://jingyan.baidu.com/article/3a2f7c2e26041a26aed61150.html\">CSS垂直居中的8种方法</a></p>\r\n\r\n<p>css水平垂直都居中：</p>\r\n\r\n<p>.父元素{ display: flex; justify-content:center; }</p>\r\n\r\n<p>.子元素{align-self: center;&nbsp; }</p>\r\n\r\n<p>js抽屉特效和有格式的弹出框</p>',1,7),(115,40,'2018-11-21 07:53:38','<p><a href=\"https://uzer.me/z/apps\">windows在线工具</a></p>',1,7),(116,40,'2018-11-21 09:37:00','<p><a href=\"http://biaoyansu.com/\">前端学习/表严肃</a></p>',1,7),(117,40,'2018-11-21 09:50:06','<p>表严肃，密码为邮箱</p>',1,7),(118,40,'2018-11-21 09:50:23','<p>DOM</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>（文档对象模型(Document Object Model)）</p>',1,7),(119,40,'2018-11-22 01:05:57','<p><a href=\"https://www.bootcdn.cn/\">前端开源库</a></p>',1,7),(120,40,'2018-11-22 06:34:33','<p><a href=\"https://blog.csdn.net/cmm113/article/details/50147923\">Atom 炫酷插件安装方法</a></p>',1,7),(121,40,'2018-11-22 06:47:11','<p>1、deb文件的安装</p>\r\n\r\n<p>2、Atom插件安装以及基础插件和一些好用到爆炸的插件</p>',1,7),(122,40,'2018-11-22 06:56:54','<p><a href=\"https://www.v2ex.com/t/369533#reply0\">Atom 安装插件失败问题 (安装源被墙) | 解决办法</a></p>',1,7),(123,40,'2018-11-22 07:03:40','<p>&ensp;<strong>apt</strong>-get install xxxx 安装&nbsp;<strong>apt</strong>-get remove xxxx&nbsp;<strong>卸载</strong>但不<strong>删除</strong>配置&nbsp;<strong>apt</strong>-get purge xxxx&nbsp;<strong>卸载</strong>并且<strong>删除</strong>相关配置</p>',1,7),(124,40,'2018-11-22 07:12:35','<p>关于Atom插件&nbsp;<strong>terminal-plus无法输入的解决办法</strong></p>\r\n\r\n<p><a href=\"https://www.v2ex.com/t/249859\">最近爱死 Atom 了，介绍几个实用插件，组合起来简直无敌了。</a></p>\r\n\r\n<p>这个扩展已经被遗弃了。换用platformio-ide-terminal吧，这是Terminal-Plus的一个Fork</p>',1,7),(125,40,'2018-11-22 07:15:41','<p><a href=\"https://segmentfault.com/\">https://segmentfault.com/</a></p>',1,7),(126,40,'2018-11-22 07:17:10','<p>可以划分一个区域做专门的自我总结，展示当天，还可以把预计和实际的区分展示，按完成度给自己打分</p>',1,7),(127,40,'2018-11-22 07:17:33','<p>然后时间轴特效</p>',1,7),(128,40,'2018-11-22 07:35:07','<p><a href=\"https://blog.csdn.net/m13026178198/article/details/52843849\">强力推荐：Atom入坑必备插件</a></p>',1,7),(129,40,'2018-11-22 07:39:37','<p><a href=\"https://www.jianshu.com/p/eac1879cb2e9\">atom必备插件及主题</a></p>',1,7),(130,40,'2018-11-22 08:23:11','<p><a href=\"http://www.imooc.com/article/1370\">ATOM编辑器快捷键大全</a></p>',1,7),(131,40,'2018-11-22 08:37:11','<p>加个前景色就可以做模糊黯淡的效果https://dummyimage.com/</p>',1,7),(132,40,'2018-11-22 08:40:33','<p><a href=\"https://dummyimage.com/600x400/333333/999999&amp;text=%E8%A0%A2%E7%8C%AB\">https://dummyimage.com/600x400/333333/999999&amp;text=要生成的文字</a></p>\r\n\r\n<p>dummyimage.com/大小/前景色/背景色&amp;text=要生成的文字</p>',1,7),(133,50,'2018-11-22 12:57:38','<p>2018-11-22-星期四</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上课</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[Bootstrap实战-栓蛋头条]</span>配置了Atom,安装了一些插件,做完了index页面</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[完成早上的Hadoop环境搭建]</span>继续在做网页的实战,到九点只做了两页,还缺登录和注册页面</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结:</strong></span></p>\r\n\r\n<p>感觉并没有太大的提升,只是熟悉了bootstrap一下,然后熟悉一下快捷键,ctrl+shift+D----------复制当前行到下一行,ctrl+shift+K-------删除当前行,ctrl+shift+回车----在上一行开新的一行,</p>\r\n\r\n<p>然后,有问题就清除浮动hhhhhh.还有display: block;  /* 设置元素生成的框的类型 */和border-radius: 3px; /* 圆角 */以及opacity: 0.7; /* 不透明度 */</p>',1,7),(134,40,'2018-11-23 06:32:06','<p><a href=\"http://fontawesome.dashgame.com/\">Font Awesome</a></p>\r\n\r\n<p><a href=\"http://fontawesome.dashgame.com/\">一套绝佳的图标字体库和CSS框架</a></p>\r\n\r\n<p>&nbsp;</p>',1,7),(135,40,'2018-11-23 07:23:26','<p><a href=\"http://www.bootstrapmb.com/\">bootstrap4.0模板</a></p>',1,7),(136,40,'2018-11-23 08:47:28','<p><a href=\"https://www.imooc.com/learn/182\">基于bootstrap的网页开发</a></p>',1,7),(137,40,'2018-11-23 08:50:18','<p>https://fishc.com.cn/forum-320-1.html</p>',1,7),(138,50,'2018-11-23 11:56:20','<p>2018-11-23-星期五</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上了一会课，然后看了一下昨天没做完的页面</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[继续栓蛋头条]做</span>了模态框登录和注册，做了轮播的广告</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[做Pyhton的笔记]</span>继续完善了页面，提交到了git，了解了一下vue</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p>1、进一步掌握了对F12的使用，对编写css覆盖样式也能更快的找到症结所在，</p>\r\n\r\n<p>2、找到了一些好用的图标和一些网站，都放在留言板了</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>3、</strong></span>对样式里面一些不必要参数做了一些了解，打算总结一下常用的bootstrap样式，不然总是害怕白学，虽然我也知道肯定不是这一次学习以后就掌握的，但是笔记还是会方便以后查看</p>\r\n\r\n<p>4、label for的用法，以及js的用法能做到很多css难以实现的功能</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>5、</strong></span>对于网站，我有一个想法，对于我登录就展示一个单独的页面，然后这其中我需要划分出简历（可以用一下时间轴的特效）、ToDoList（可以用输入添加，点击或者点击那一项前面的选择框给他加删除线、变灰色）</p>\r\n\r\n<p><span style=\"color:#3498db\"><strong>6、以上5中的一些想法都可以用vue实现，但是学习vue需要js基础。所以hhhh，fighting</strong></span></p>\r\n\r\n<p><span style=\"color:#3498db\"><strong>7、明天是周六，自习，可以完成Hadoop的环境搭建，赶上进度，然后回到正轨（调整一下轨道）</strong></span></p>\r\n\r\n<p>8、前端真有意思hhhh，离后端越来越远了</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>9、对于计划时间的把控很差，会发现沉入一个东西就一直专死，不知道好不好。需不需要加一下番茄钟什么的来控制一下。</strong></span></p>\r\n\r\n<p><span style=\"color:null\">10、</span><span style=\"color:#e74c3c\"><strong>专注、专注、专注（精于几项，其他的是拓展extend）</strong></span></p>',1,7),(139,50,'2018-11-24 14:34:16','<p>2018-11-24-星期六</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[休息]</span><span style=\"color:null\">睡了个懒觉，八点多才起床</span></p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[搭建hadoop环境、一些杂事]</span>实搭建完了环境，有点小bug，杂事也没有处理</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[无计划]</span>浪费</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p>周六休息，发现一懈怠整个人就变得懒了。如果这个总结只是写学习的话，周末好像就没有什么东西可写了，这是我早点的想法，在写下这一段话的时候我也突然意识到，这就是周末时间安排的问题所在呀。</p>\r\n\r\n<p>明天可以看一下jupyter的一些用法，然后改一下网站？？！还有修手机啦</p>',1,7),(140,50,'2018-11-25 11:09:24','<p>2018-11-25-星期日</p>\r\n\r\n<p>早：[休息]睡懒觉</p>\r\n\r\n<p>下午：[杂事]无</p>\r\n\r\n<p>晚上:[无]无</p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">总结：</span></strong></p>\r\n\r\n<p>1、想起了胡适之的打牌的笑话，但其中有这一段</p>\r\n\r\n<p>&ldquo; 今日，迁居世界学生会所，初次离群索居，殊觉凄冷。昨日，与金涛君相戒不复打牌。</p>\r\n\r\n<p><span style=\"color:#2980b9\"><strong>应以为戒</strong></span></p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">2、想好的下一个习惯做什么了，暂时没有适当的环境锻炼，那就在家做一些基础的锻炼吧。</span></strong></p>\r\n\r\n<p><strong><span style=\"color:#e74c3c\">为什么不从现在就开始呢，因为深知自己不是有多大毅力，多大恒心之人，一月一个习惯虽然不是自己的上限，但是作为下限却可以很好的维持下去，新开发两个习惯就是两件事，但是养成一个习惯了再开发一个新的习惯确实一件事，一件事我还是做的来的。我很急，但还是慢慢来。</span></strong></p>\r\n\r\n<p><span style=\"color:#2ecc71\">3、关于一些对应账户的问题，可以判断权限来进行设置</span></p>',1,7),(141,50,'2018-11-26 16:24:53','<p>2018-11-26-星期一</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上课，但是什么都没学到</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[无计划]</span>看了js基础</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[无计划]</span>无实际行为</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>仿佛又混了一天，什么都没做，晚安</strong></span></p>',1,7),(142,40,'2018-11-27 05:10:41','<p>那就，第二个习惯 看书get&radic;</p>',3,7),(143,40,'2018-11-27 06:35:42','<p><a href=\"https://www.jianshu.com/p/2961d9c317a3\">JS训练题目</a></p>',1,7),(144,40,'2018-11-27 06:55:12','<p><a href=\"https://www.nowcoder.com/activity/oj\">牛客网在线测试</a></p>',1,7),(145,50,'2018-11-27 16:56:41','<p>2018-11-27-星期二</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上课，但是什么都没学到</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[js+vue]</span>在实验楼练习了一下午js基础</p>\r\n\r\n<p>晚上:[无计划]无实际行为</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p><strong>慢慢计划在变好，抓住状态好的时候，晚安</strong></p>\r\n\r\n<p><strong>保持坚定，保持自信</strong></p>',1,7),(146,40,'2018-11-28 06:57:37','<p><a href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-pythonre/\">re详解</a></p>',1,7),(147,50,'2018-11-28 13:49:53','<p>2018-11-28-星期三</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上课，但是什么都没学到</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[js]</span>练习也基本掌握了一些基本的用法，明天可以做一些小栗子，</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[无计划]</span>无实际行为</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p><strong>对js主要欠缺就是对方法的了解已经属性，我把这些准备放到后面用时间来慢慢接触，现在只是学vue的铺垫，然后学习jq和vue前端的基础就算是打完了</strong></p>',1,7),(148,40,'2018-11-29 07:12:32','<p><a href=\"https://codecombat.163.com/play\">极客战记</a></p>',1,7),(149,40,'2018-11-29 07:33:28','<p><a href=\"https://www.cnblogs.com/derek1184405959/p/8733194.html\" id=\"cb_post_title_url\">Django REST framework+Vue 打造生鲜超市（一）</a></p>',1,7),(150,51,'2018-11-29 08:51:54','<p>[1]、Date().toLocaleString()&nbsp;&nbsp;</p>\r\n\r\n<p>toLocaleString() 方法可根据本地时间把 Date 对象转换为字符串，并返回结果。</p>\r\n\r\n<p>toString()和toLocaleString()的区别（）：</p>\r\n\r\n<ol>\r\n	<li>如果是toString()，会直接返回标准的格式；</li>\r\n	<li>如果是toLocaleString()，先判断是否指定语言环境（locale），指定的话则返回当前语言环境下的格式设置（options）的格式化字符串；没有指定语言环境（locale），则返回一个使用默认语言环境和格式设置（options）的格式化字符串。</li>\r\n	<li>只了解在Date()时toLocaleString()有格式，超过四位数的数字会三位加个&quot;,&quot; ，而toString()就是简单的转换格式</li>\r\n</ol>',1,7),(151,51,'2018-11-29 10:30:02','<p>[2]、数据结构的各类方法</p>',1,7),(152,40,'2018-11-29 10:49:52','<p>Python&nbsp; &nbsp; 的join()</p>',1,7),(153,51,'2018-11-29 10:50:41','<p>[3]、字符串逆转</p>\r\n\r\n<p>.split(&#39;&#39;).reverse().join(&#39;&#39;)</p>',1,7),(154,51,'2018-11-29 11:49:55','<p>[4]、HTML属性--title</p>\r\n\r\n<p>title 属性规定关于元素的额外信息。</p>\r\n\r\n<p>这些信息通常会在鼠标移到元素上时显示一段工具提示文本（tooltip text）。</p>\r\n\r\n<p>提示：title 属性常与 form 以及 a 元素一同使用，以提供关于输入格式和链接目标的信息。同时它也是 abbr 和 acronym 元素的必需属性。</p>',1,7),(155,40,'2018-11-29 12:34:00','<p>SyntaxError: EOL while scanning string literal<br />\r\n反斜杠引起的错误，反斜杠\\不能做为字符串的结尾</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>使用在使用re匹配网站时，可以先将，，，<span style=\"color:#e74c3c\"><strong>怎么将一个字符串变量转化为原生字符串？？？或者怎么解决re匹配反斜杠的问题？？？怎么将\\\\替换为\\？？？？？？</strong></span></p>',1,7),(156,50,'2018-11-29 14:49:48','<p>2018-11-29-星期四</p>\r\n\r\n<p>早：<span style=\"color:#2ecc71\">[上课]</span>上课，但是什么都没学到</p>\r\n\r\n<p>下午：<span style=\"color:#2ecc71\">[Vue]</span>忘了练习栗子，看完了Vue文档的第一小节</p>\r\n\r\n<p>晚上:<span style=\"color:#2ecc71\">[无计划]</span>被爬虫困扰了一下，看文档</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>总结：</strong></span></p>\r\n\r\n<p><strong>1、写在这里很奇怪，但还是要讲，</strong></p>\r\n\r\n<p><strong><span style=\"background-color:#f1c40f\">不能让工资成为唯一的收入来源</span></strong></p>\r\n\r\n<p><strong>2、没有一个系统的学习方法，只能焦虑和做无用功</strong></p>\r\n\r\n<p><strong>3、硬着头皮啃，过一遍再说</strong></p>\r\n\r\n<p><strong><span style=\"background-color:#e74c3c\">4、上午效率低下，要对的起每天的价值</span></strong></p>',1,7),(157,51,'2018-11-30 02:21:09','<p>[5]、错误信息：<strong><span style=\"background-color:#f1c40f\">Uncaught SyntaxError: Invalid or unexpected token</span></strong></p>\r\n\r\n<p>&nbsp;&rdquo;无效或意外的标记&ldquo;</p>\r\n\r\n<p><span style=\"color:#e74c3c\"><strong>一般就是符号中文打出来的</strong></span></p>',1,7),(158,40,'2018-11-30 07:37:54','<p><a href=\"http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html\">MVC，MVP 和 MVVM</a></p>',1,7),(159,40,'2018-11-30 07:45:42','<p><strong>异常流行幻象与群众疯狂</strong>；困惑之惑</p>',1,7),(160,50,'2018-11-30 08:00:53','<p>2018-11-30-星期五</p>\r\n\r\n<p>早：[上课]上课，但是什么都没学到</p>\r\n\r\n<p>下午：[Vue]看Vue文档，尝试拒绝干扰</p>\r\n\r\n<p>晚上:浪费时间的聚餐</p>\r\n\r\n<p><strong>总结：</strong></p>\r\n\r\n<p>1、习惯一旦开始有了，就会越来越多，想法也越来越多，接下来可以养成<strong><span style=\"color:#e74c3c\">锻炼、护肤和阅读</span></strong></p>\r\n\r\n<p><span style=\"color:null\">2、真的很穷啊，也慢</span></p>\r\n\r\n<p>&nbsp;</p>',1,7),(161,40,'2018-11-30 09:21:57','<p><a href=\"https://en.wikipedia.org/wiki/Main_Page\">维基百科中文站点</a></p>',1,7),(162,50,'2018-12-01 17:00:11','2018-12-1-星期六\r\n荒废一天',1,7),(163,50,'2018-12-03 10:59:14','<p><span style=\"color:#e74c3c\"><strong>2018-12-2-星期日</strong></span></p>',1,7),(164,50,'2018-12-03 11:08:24','<p><span style=\"color:#e74c3c\"><strong>2018-12-3-星期一</strong></span></p>\r\n\r\n<p>早：[上课]浪费时间</p>\r\n\r\n<p>下午：[上课]浪费时间</p>\r\n\r\n<p>晚上:浪费时间</p>\r\n\r\n<p><strong>总结：</strong></p>\r\n\r\n<p><strong>？？？？？？？？？</strong></p>',1,7),(165,50,'2018-12-04 11:33:48','<p>2018-12-4-星期二</p>\r\n\r\n<p>早：requests</p>\r\n\r\n<p>下午：re</p>\r\n\r\n<p>晚上：vue模板语法</p>\r\n\r\n<p>总结：</p>\r\n\r\n<p>效率低下</p>',1,7),(166,50,'2018-12-05 11:13:50','<p>2018-12-5-星期三</p>\r\n\r\n<p>早：BeautifulSoup</p>\r\n\r\n<p>下午：selenium</p>\r\n\r\n<p>晚上：练习</p>\r\n\r\n<p>总结：</p>\r\n\r\n<p>各种事情</p>',1,7),(167,40,'2018-12-05 11:41:33','<p><a href=\"https://pan.baidu.com/s/1AuKf_9fMNSKdCQc9NUmbfg#list/path=%2F&amp;parentPath=%2F\">https://pan.baidu.com/s/1AuKf_9fMNSKdCQc9NUmbfg#list/path=%2F&amp;parentPath=%2F</a></p>\r\n\r\n<p>密码：qjol</p>',1,7),(168,40,'2018-12-06 03:32:54','<p><a href=\"https://jingyan.baidu.com/article/36d6ed1f821ca21bcf4883da.html\">ubuntu安装deb文件</a></p>',1,7),(169,50,'2018-12-06 03:34:42','<p><span style=\"color:#e74c3c\"><strong>有个具像的充满诱惑力的目标会让执行力远超过既定的目标，大概人也是个事件驱动的对象。</strong></span></p>',1,7),(170,40,'2018-12-06 03:45:01','<p><a href=\"https://wenku.baidu.com/view/92a19603e87101f69e3195ed.html\">我们时代的神经症人格，书评</a></p>',1,7),(171,40,'2018-12-06 09:19:08','<p><a href=\"https://www.zhihu.com/question/66466087\">总之岁月漫长，然而值得等待</a></p>',1,7),(172,50,'2018-12-06 11:16:25','<p>2018-12-6-星期四</p>\r\n\r\n<p>早：selenium</p>\r\n\r\n<p>下午：scrapy</p>\r\n\r\n<p>总结：</p>\r\n\r\n<p>开始修改网站的页面</p>',1,7),(173,50,'2018-12-07 14:12:31','2018-12-7-星期五\r\n\r\n早：scrapy组件\r\n\r\n中：配置环境，练习\r\n\r\n晚：练习\r\n\r\n总结：\r\n\r\n1、状态慢慢好起来\r\n\r\n2、不要忘记自己在做什么\r\n\r\n3、django还有很多要补，scrapy也是\r\n\r\n验证码，反爬，模拟登录，ajax爬取，分布式',1,7);
/*!40000 ALTER TABLE `comment_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `data_statistics_read_detail`
--

DROP TABLE IF EXISTS `data_statistics_read_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `data_statistics_read_detail` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `read_num` int(11) NOT NULL,
  `read_time` date NOT NULL,
  `object_id` int(10) unsigned NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `data_statistics_read_content_type_id_6b2ff911_fk_django_co` (`content_type_id`),
  CONSTRAINT `data_statistics_read_content_type_id_6b2ff911_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `data_statistics_read_detail`
--

LOCK TABLES `data_statistics_read_detail` WRITE;
/*!40000 ALTER TABLE `data_statistics_read_detail` DISABLE KEYS */;
INSERT INTO `data_statistics_read_detail` VALUES (23,5,'2018-09-27',22,7),(24,12,'2018-09-28',23,7),(25,3,'2018-09-28',24,7),(26,4,'2018-09-29',25,7),(27,2,'2018-09-30',26,7),(28,4,'2018-09-30',27,7),(29,2,'2018-10-01',28,7),(30,6,'2018-10-06',29,7),(31,1,'2018-10-06',10,7),(32,2,'2018-10-06',11,7),(33,10,'2018-10-06',30,7),(34,3,'2018-10-08',13,7),(35,5,'2018-10-10',31,7),(36,4,'2018-10-12',14,7),(37,2,'2018-10-12',18,7),(38,6,'2018-10-12',19,7),(39,7,'2018-10-16',32,7),(40,1,'2018-10-16',16,7),(42,21,'2018-10-16',36,7),(43,5,'2018-10-16',37,7),(44,6,'2018-10-17',38,7),(45,2,'2018-10-17',21,7),(46,1,'2018-10-17',20,7),(47,5,'2018-10-17',39,7),(48,28,'2018-10-19',40,7),(49,1,'2018-10-19',1,7),(50,1,'2018-10-19',2,7),(51,1,'2018-10-19',3,7),(52,1,'2018-10-19',4,7),(53,6,'2018-10-20',41,7),(54,3,'2018-10-26',42,7),(55,1,'2018-11-02',12,7),(57,5,'2018-11-03',44,7),(58,3,'2018-11-14',46,7),(60,6,'2018-11-22',50,7),(61,3,'2018-11-27',49,7),(62,2,'2018-11-27',48,7),(63,3,'2018-11-27',45,7),(64,1,'2018-11-29',51,7);
/*!40000 ALTER TABLE `data_statistics_read_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `data_statistics_read_num`
--

DROP TABLE IF EXISTS `data_statistics_read_num`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `data_statistics_read_num` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `read_num` int(11) NOT NULL,
  `object_id` int(10) unsigned NOT NULL,
  `content_type_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `data_statistics_read_content_type_id_ec32ded0_fk_django_co` (`content_type_id`),
  CONSTRAINT `data_statistics_read_content_type_id_ec32ded0_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `data_statistics_read_num`
--

LOCK TABLES `data_statistics_read_num` WRITE;
/*!40000 ALTER TABLE `data_statistics_read_num` DISABLE KEYS */;
INSERT INTO `data_statistics_read_num` VALUES (23,5,22,7),(24,12,23,7),(25,3,24,7),(26,4,25,7),(27,2,26,7),(28,4,27,7),(29,2,28,7),(30,6,29,7),(31,1,10,7),(32,2,11,7),(33,10,30,7),(34,3,13,7),(35,5,31,7),(36,4,14,7),(37,2,18,7),(38,6,19,7),(39,7,32,7),(40,1,16,7),(41,1,33,7),(42,21,36,7),(43,5,37,7),(44,6,38,7),(45,2,21,7),(46,1,20,7),(47,5,39,7),(48,28,40,7),(49,1,1,7),(50,1,2,7),(51,1,3,7),(52,1,4,7),(53,6,41,7),(54,3,42,7),(55,1,12,7),(56,2,43,7),(57,5,44,7),(58,3,46,7),(59,1,47,7),(60,6,50,7),(61,3,49,7),(62,2,48,7),(63,3,45,7),(64,1,51,7);
/*!40000 ALTER TABLE `data_statistics_read_num` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=256 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2018-09-08 01:52:58','1','笔记',1,'[{\"added\": {}}]',8,1),(2,'2018-09-08 01:53:18','2','个人记录',1,'[{\"added\": {}}]',8,1),(3,'2018-09-08 01:56:07','1','<Blog: 夸张的讲，断网的这几天是我效率最高的一段时间>',1,'[{\"added\": {}}]',7,1),(4,'2018-09-08 01:57:32','2','<Blog: 数量统计还有问题>',1,'[{\"added\": {}}]',7,1),(5,'2018-09-08 02:35:33','1','Comment object (1)',2,'[{\"changed\": {\"fields\": [\"comment_detail\"]}}]',11,1),(6,'2018-09-08 10:14:18','3','<Blog: 关于DjangoForm的css样式>',1,'[{\"added\": {}}]',7,1),(7,'2018-09-09 00:56:37','4','<Blog: 登陆跳转重定向回不到登陆前页面>',1,'[{\"added\": {}}]',7,1),(8,'2018-09-09 01:08:46','5','<Blog: 缓存没用到>',1,'[{\"added\": {}}]',7,1),(9,'2018-09-09 14:07:05','6','<Blog: exists()的作用是什么>',1,'[{\"added\": {}}]',7,1),(10,'2018-09-09 14:22:03','1','EVIC',2,'[{\"changed\": {\"fields\": [\"first_name\", \"last_name\", \"last_login\"]}}]',4,1),(11,'2018-09-10 03:35:26','7','<Blog: 登陆注册界面要改呀>',1,'[{\"added\": {}}]',7,1),(12,'2018-09-10 08:02:22','8','<Blog: 登出方法设计>',1,'[{\"added\": {}}]',7,1),(13,'2018-09-10 09:13:31','9','<Blog: model_class()方法详解>',1,'[{\"added\": {}}]',7,1),(14,'2018-09-10 09:50:33','10','<Blog: strip()的用法>',1,'[{\"added\": {}}]',7,1),(15,'2018-09-10 09:51:16','10','<Blog: strip()的用法>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(16,'2018-09-10 10:31:44','8','Comment object (8)',3,'',11,1),(17,'2018-09-10 10:31:45','7','Comment object (7)',3,'',11,1),(18,'2018-09-10 10:31:57','2','Comment object (2)',3,'',11,1),(19,'2018-09-10 14:47:29','13','Comment object (13)',3,'',11,1),(20,'2018-09-11 03:37:29','11','<Blog: 在Pythonanywhere上部署django>',1,'[{\"added\": {}}]',7,1),(21,'2018-09-12 05:49:30','11','<Blog: 在Pythonanywhere上部署django>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(22,'2018-09-12 06:31:19','11','<Blog: 在Pythonanywhere上部署django>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(23,'2018-09-12 08:01:09','11','<Blog: 在Pythonanywhere上部署django>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(24,'2018-09-12 09:52:40','12','<Blog: 运维学习第一课：Linux目录结构>',1,'[{\"added\": {}}]',7,1),(25,'2018-09-12 09:53:37','12','<Blog: 运维学习第一课：Linux目录结构>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(26,'2018-09-12 10:34:51','13','<Blog: 【转载】Linux下可用的QQ>',1,'[{\"added\": {}}]',7,1),(27,'2018-09-13 01:26:09','14','<Blog: 运维第二课：Linux基础指令>',1,'[{\"added\": {}}]',7,1),(28,'2018-09-13 01:30:37','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(29,'2018-09-13 01:32:03','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(30,'2018-09-13 01:32:35','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(31,'2018-09-13 01:33:46','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(32,'2018-09-13 01:34:32','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(33,'2018-09-13 01:41:31','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(34,'2018-09-13 01:43:16','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(35,'2018-09-13 01:46:42','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(36,'2018-09-13 01:47:27','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(37,'2018-09-13 01:48:26','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(38,'2018-09-13 01:49:29','3','运维',1,'[{\"added\": {}}]',8,1),(39,'2018-09-13 01:49:41','4','资源分享',1,'[{\"added\": {}}]',8,1),(40,'2018-09-13 01:50:03','13','<Blog: 【转载】Linux下可用的QQ>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(41,'2018-09-13 01:50:18','12','<Blog: 运维学习第一课：Linux目录结构>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(42,'2018-09-13 01:50:29','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(43,'2018-09-13 01:50:50','1','笔记',3,'',8,1),(44,'2018-09-13 02:16:08','15','<Blog: ckeditor的一些问题>',1,'[{\"added\": {}}]',7,1),(45,'2018-09-13 02:16:46','15','<Blog: 接触ckeditor个人遇到的一些问题>',2,'[{\"changed\": {\"fields\": [\"title\", \"content\"]}}]',7,1),(46,'2018-09-13 03:32:37','16','<Blog: Linux命令大全>',1,'[{\"added\": {}}]',7,1),(47,'2018-09-13 06:58:25','17','<Blog: 百度云网盘PanDownload>',1,'[{\"added\": {}}]',7,1),(48,'2018-09-13 13:03:24','18','<Blog: 运维第三课：Linux进阶指令>',1,'[{\"added\": {}}]',7,1),(49,'2018-09-13 13:04:42','18','<Blog: 运维第三课：Linux进阶指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(50,'2018-09-13 13:33:43','19','<Blog: 运维第四课：Linux高级命令>',1,'[{\"added\": {}}]',7,1),(51,'2018-09-13 14:06:42','12','<Blog: 运维第一课：Linux目录结构>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(52,'2018-09-13 14:11:28','19','<Blog: 运维第四课：Linux高级命令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(53,'2018-09-13 14:12:36','14','<Blog: 运维第二课：Linux基础指令>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(54,'2018-09-14 00:28:06','12','<Blog: 运维第一课：Linux目录结构>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(55,'2018-09-15 16:11:39','20','<Blog: 今日分的《岁月神偷》>',1,'[{\"added\": {}}]',7,1),(56,'2018-09-15 16:17:05','5','自知',1,'[{\"added\": {}}]',8,1),(57,'2018-09-15 16:18:39','20','<Blog: 今日分的《岁月神偷》>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(58,'2018-09-15 16:19:05','1','<Blog: 夸张的讲，断网的这几天是我效率最高的一段时间>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(59,'2018-09-17 11:59:27','21','<Blog: 做人还是现有自己再去和别人接触吧>',1,'[{\"added\": {}}]',7,1),(60,'2018-09-17 12:01:35','22','<Blog: 九月份来深圳的补充>',1,'[{\"added\": {}}]',7,1),(61,'2018-09-19 04:07:34','6','测试',1,'[{\"added\": {}}]',8,1),(62,'2018-09-27 13:17:05','3','Read_Detail object (3)',3,'',10,1),(63,'2018-09-27 13:17:05','2','Read_Detail object (2)',3,'',10,1),(64,'2018-09-27 13:17:05','1','Read_Detail object (1)',3,'',10,1),(65,'2018-09-27 13:17:05','5','Read_Detail object (5)',3,'',10,1),(66,'2018-09-27 13:17:05','4','Read_Detail object (4)',3,'',10,1),(67,'2018-09-27 13:17:05','7','Read_Detail object (7)',3,'',10,1),(68,'2018-09-27 13:17:05','6','Read_Detail object (6)',3,'',10,1),(69,'2018-09-27 13:17:05','13','Read_Detail object (13)',3,'',10,1),(70,'2018-09-27 13:17:05','12','Read_Detail object (12)',3,'',10,1),(71,'2018-09-27 13:17:05','11','Read_Detail object (11)',3,'',10,1),(72,'2018-09-27 13:17:05','10','Read_Detail object (10)',3,'',10,1),(73,'2018-09-27 13:17:05','9','Read_Detail object (9)',3,'',10,1),(74,'2018-09-27 13:17:05','8','Read_Detail object (8)',3,'',10,1),(75,'2018-09-27 13:17:05','19','Read_Detail object (19)',3,'',10,1),(76,'2018-09-27 13:17:05','18','Read_Detail object (18)',3,'',10,1),(77,'2018-09-27 13:17:05','17','Read_Detail object (17)',3,'',10,1),(78,'2018-09-27 13:17:05','16','Read_Detail object (16)',3,'',10,1),(79,'2018-09-27 13:17:05','15','Read_Detail object (15)',3,'',10,1),(80,'2018-09-27 13:17:05','14','Read_Detail object (14)',3,'',10,1),(81,'2018-09-27 13:17:05','22','Read_Detail object (22)',3,'',10,1),(82,'2018-09-27 13:17:05','21','Read_Detail object (21)',3,'',10,1),(83,'2018-09-27 13:17:05','20','Read_Detail object (20)',3,'',10,1),(84,'2018-09-27 13:17:29','1','Read_Num object (1)',3,'',9,1),(85,'2018-09-27 13:17:29','2','Read_Num object (2)',3,'',9,1),(86,'2018-09-27 13:17:29','3','Read_Num object (3)',3,'',9,1),(87,'2018-09-27 13:17:29','11','Read_Num object (11)',3,'',9,1),(88,'2018-09-27 13:17:29','4','Read_Num object (4)',3,'',9,1),(89,'2018-09-27 13:17:29','5','Read_Num object (5)',3,'',9,1),(90,'2018-09-27 13:17:29','6','Read_Num object (6)',3,'',9,1),(91,'2018-09-27 13:17:29','7','Read_Num object (7)',3,'',9,1),(92,'2018-09-27 13:17:29','10','Read_Num object (10)',3,'',9,1),(93,'2018-09-27 13:17:29','9','Read_Num object (9)',3,'',9,1),(94,'2018-09-27 13:17:29','8','Read_Num object (8)',3,'',9,1),(95,'2018-09-27 13:17:29','12','Read_Num object (12)',3,'',9,1),(96,'2018-09-27 13:17:29','13','Read_Num object (13)',3,'',9,1),(97,'2018-09-27 13:17:29','14','Read_Num object (14)',3,'',9,1),(98,'2018-09-27 13:17:29','15','Read_Num object (15)',3,'',9,1),(99,'2018-09-27 13:17:29','16','Read_Num object (16)',3,'',9,1),(100,'2018-09-27 13:17:29','17','Read_Num object (17)',3,'',9,1),(101,'2018-09-27 13:17:29','18','Read_Num object (18)',3,'',9,1),(102,'2018-09-27 13:17:29','19','Read_Num object (19)',3,'',9,1),(103,'2018-09-27 13:17:29','22','Read_Num object (22)',3,'',9,1),(104,'2018-09-27 13:17:29','21','Read_Num object (21)',3,'',9,1),(105,'2018-09-27 13:17:29','20','Read_Num object (20)',3,'',9,1),(106,'2018-09-28 13:00:12','23','<Blog: 字典按valve将key分组>',1,'[{\"added\": {}}]',7,1),(107,'2018-09-28 13:01:10','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(108,'2018-09-28 13:01:48','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(109,'2018-09-28 13:02:25','23','<Blog: 字典按valve将key分组>',2,'[]',7,1),(110,'2018-09-28 13:02:51','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(111,'2018-09-28 13:03:37','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(112,'2018-09-28 13:04:13','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(113,'2018-09-28 13:05:03','23','<Blog: 字典按valve将key分组>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(114,'2018-09-28 13:06:03','23','<Blog: 字典按valve将key分组>',2,'[]',7,1),(115,'2018-09-28 13:21:21','21','<Blog: 做人还是先有自己再去和别人接触吧>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(116,'2018-09-28 13:51:09','24','<Blog: 单线程定向爬虫入门>',1,'[{\"added\": {}}]',7,1),(117,'2018-09-28 13:51:29','24','<Blog: 单线程定向爬虫入门>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(118,'2018-09-29 02:35:51','25','<Blog: Python的地址引用问题>',1,'[{\"added\": {}}]',7,1),(119,'2018-09-29 02:36:40','25','<Blog: Python的地址引用问题>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(120,'2018-09-29 02:38:17','25','<Blog: Python的地址引用问题>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(121,'2018-09-30 07:04:17','26','<Blog: 多层创建文件路径>',1,'[{\"added\": {}}]',7,1),(122,'2018-09-30 07:04:58','26','<Blog: 多层创建文件路径>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(123,'2018-09-30 07:05:19','26','<Blog: 多层创建文件路径>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(124,'2018-09-30 07:05:45','26','<Blog: 多层创建文件路径>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(125,'2018-09-30 07:06:46','26','<Blog: 多层创建文件路径>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(126,'2018-09-30 07:10:28','27','<Blog: 近期需要补充的知识>',1,'[{\"added\": {}}]',7,1),(127,'2018-09-30 07:12:12','27','<Blog: 近期需要补充的知识>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(128,'2018-09-30 07:16:26','27','<Blog: 近期需要补充的知识>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(129,'2018-09-30 07:17:19','27','<Blog: 近期需要补充的知识>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(130,'2018-09-30 07:18:03','27','<Blog: 近期需要补充的知识>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(131,'2018-09-30 09:35:49','22','<Blog: 九月份来深圳的补充>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(132,'2018-10-01 02:19:49','28','<Blog: XPath初次使用>',1,'[{\"added\": {}}]',7,1),(133,'2018-10-01 02:21:41','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(134,'2018-10-01 02:24:09','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(135,'2018-10-01 02:25:06','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(136,'2018-10-01 02:26:01','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(137,'2018-10-01 02:26:54','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(138,'2018-10-01 02:27:55','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(139,'2018-10-01 02:28:48','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(140,'2018-10-01 02:29:29','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(141,'2018-10-01 02:29:55','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(142,'2018-10-01 02:30:08','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(143,'2018-10-01 02:30:53','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(144,'2018-10-01 02:33:07','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(145,'2018-10-01 02:34:26','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(146,'2018-10-01 02:35:03','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(147,'2018-10-01 02:35:31','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(148,'2018-10-01 02:36:09','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(149,'2018-10-01 02:38:22','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(150,'2018-10-01 02:39:56','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(151,'2018-10-01 02:41:12','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(152,'2018-10-01 02:43:47','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(153,'2018-10-01 02:45:20','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(154,'2018-10-01 02:46:37','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(155,'2018-10-01 02:59:09','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(156,'2018-10-01 03:08:53','28','<Blog: XPath初次使用（参考）>',2,'[{\"changed\": {\"fields\": [\"title\", \"content\"]}}]',7,1),(157,'2018-10-01 03:10:08','28','<Blog: XPath初次使用（参考）>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(158,'2018-10-01 06:43:36','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"title\", \"content\"]}}]',7,1),(159,'2018-10-01 06:48:16','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(160,'2018-10-01 06:49:20','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(161,'2018-10-01 06:50:49','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(162,'2018-10-01 06:52:26','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(163,'2018-10-01 06:55:46','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(164,'2018-10-01 06:58:21','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(165,'2018-10-01 06:59:42','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(166,'2018-10-01 07:01:05','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(167,'2018-10-01 07:02:45','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(168,'2018-10-01 07:04:48','28','<Blog: XPath初次使用>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(169,'2018-10-06 05:28:22','29','<Blog: Python浅拷贝和深拷贝>',1,'[{\"added\": {}}]',7,1),(170,'2018-10-06 05:34:48','29','<Blog: Python浅拷贝和深拷贝>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(171,'2018-10-06 05:36:10','29','<Blog: Python浅拷贝和深拷贝>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(172,'2018-10-06 05:37:44','6','测试',3,'',8,1),(173,'2018-10-06 13:22:36','30','<Blog: 自娱：用re的间隔提取以及XPath的string()相关>',1,'[{\"added\": {}}]',7,1),(174,'2018-10-06 13:23:04','30','<Blog: 自娱：用re的间隔提取以及XPath的string()相关>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(175,'2018-10-06 13:23:29','30','<Blog: 自娱：用re的间隔提取以及XPath的string()相关>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(176,'2018-10-06 13:25:40','30','<Blog: 自娱：用re的间隔提取以及XPath的string()相关>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(177,'2018-10-06 13:26:19','30','<Blog: 自娱：用re的间隔提取以及XPath的string()相关>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(178,'2018-10-10 02:50:14','31','<Blog: Sublime查看json文件>',1,'[{\"added\": {}}]',7,1),(179,'2018-10-16 03:49:56','32','<Blog: GitHub记录>',1,'[{\"added\": {}}]',7,1),(180,'2018-10-16 08:37:42','3','Linux',2,'[{\"changed\": {\"fields\": [\"type_name\"]}}]',8,1),(181,'2018-10-16 08:39:18','33','<Blog: Linux下安装Python3>',1,'[{\"added\": {}}]',7,1),(182,'2018-10-16 08:40:09','34','<Blog: CentOS 7 下安装pip>',1,'[{\"added\": {}}]',7,1),(183,'2018-10-16 08:40:50','35','<Blog: pip安装时出现找不到SSL的错误>',1,'[{\"added\": {}}]',7,1),(184,'2018-10-16 08:41:12','33','<Blog: CentOS 7下安装Python3>',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(185,'2018-10-16 12:06:07','36','<Blog: CentOS 7下安装python3并安装Scrapy>',1,'[{\"added\": {}}]',7,1),(186,'2018-10-16 12:11:39','36','<Blog: CentOS 7下安装python3并安装Scrapy>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(187,'2018-10-16 12:13:48','36','<Blog: CentOS 7下安装python3并安装Scrapy>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(188,'2018-10-16 12:31:09','36','<Blog: CentOS 7下安装python3并安装Scrapy>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(189,'2018-10-16 12:32:44','35','<Blog: pip安装时出现找不到SSL的错误>',3,'',7,1),(190,'2018-10-16 12:32:44','34','<Blog: CentOS 7 下安装pip>',3,'',7,1),(191,'2018-10-16 12:32:44','33','<Blog: CentOS 7下安装Python3>',3,'',7,1),(192,'2018-10-16 13:31:20','36','<Blog: CentOS 7下安装python3并安装Scrapy>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(193,'2018-10-16 13:59:27','37','<Blog: CentOS7 下安装Pycharm专业版>',1,'[{\"added\": {}}]',7,1),(194,'2018-10-17 05:52:38','38','<Blog: CentOS下安装remarkable的始末>',1,'[{\"added\": {}}]',7,1),(195,'2018-10-17 05:53:22','38','<Blog: CentOS下安装remarkable的始末>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(196,'2018-10-17 05:54:57','38','<Blog: CentOS下安装remarkable的始末>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(197,'2018-10-17 06:08:00','38','<Blog: CentOS下安装remarkable的始末>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(198,'2018-10-17 06:26:02','38','<Blog: CentOS下安装remarkable的始末>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(199,'2018-10-17 14:45:31','39','<Blog: Markdown添加空格和空行>',1,'[{\"added\": {}}]',7,1),(200,'2018-10-17 14:47:42','39','<Blog: Markdown添加空格和空行>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(201,'2018-10-17 14:48:16','39','<Blog: Markdown添加空格和空行>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(202,'2018-10-17 14:49:50','39','<Blog: Markdown添加空格和空行>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(203,'2018-10-19 01:37:35','40','<Blog: 可以开辟一个留言区>',1,'[{\"added\": {}}]',7,1),(204,'2018-10-20 11:49:24','41','<Blog: Pythonanywhere备份>',1,'[{\"added\": {}}]',7,1),(205,'2018-10-20 11:50:12','41','<Blog: Pythonanywhere备份>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(206,'2018-10-20 11:50:29','41','<Blog: Pythonanywhere备份>',2,'[]',7,1),(207,'2018-10-20 11:50:38','41','<Blog: Pythonanywhere备份>',2,'[]',7,1),(208,'2018-10-20 11:51:34','41','<Blog: Pythonanywhere备份>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(209,'2018-10-20 13:56:21','2','smmy',3,'',4,1),(210,'2018-10-20 14:09:10','36','Comment object (36)',3,'',11,1),(211,'2018-10-20 14:31:35','3','蠢猫sama',2,'[{\"changed\": {\"fields\": [\"is_staff\", \"user_permissions\", \"last_login\"]}}]',4,1),(212,'2018-10-20 14:34:05','3','蠢猫sama',2,'[{\"changed\": {\"fields\": [\"is_superuser\"]}}]',4,1),(213,'2018-10-20 14:34:23','3','蠢猫sama',2,'[{\"changed\": {\"fields\": [\"user_permissions\"]}}]',4,1),(214,'2018-10-26 03:23:30','42','<Blog: linux知识体系框图>',1,'[{\"added\": {}}]',7,1),(215,'2018-10-26 03:25:47','42','<Blog: linux知识体系框图>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(216,'2018-10-26 03:27:26','42','<Blog: linux知识体系框图>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(217,'2018-11-03 06:14:18','43','<Blog: Linux遇到的一点不理解的权限问题>',1,'[{\"added\": {}}]',7,1),(218,'2018-11-03 06:16:56','44','<Blog: Linux遇到的一点不理解的权限问题>',1,'[{\"added\": {}}]',7,1),(219,'2018-11-03 06:25:17','43','<Blog: Linux遇到的一点不理解的权限问题>',3,'',7,1),(220,'2018-11-07 07:53:50','89','Comment object (89)',3,'',11,1),(221,'2018-11-13 07:20:57','97','Comment object (97)',3,'',11,1),(222,'2018-11-13 07:20:57','96','Comment object (96)',3,'',11,1),(223,'2018-11-14 01:14:38','7','Django',1,'[{\"added\": {}}]',8,1),(224,'2018-11-14 01:17:46','45','<Blog: 解决Table already exists问题>',1,'[{\"added\": {}}]',7,1),(225,'2018-11-14 01:19:59','8','Python-3',1,'[{\"added\": {}}]',8,1),(226,'2018-11-14 02:29:59','46','<Blog: 对于博客形式的一点想法-增量式>',1,'[{\"added\": {}}]',7,1),(227,'2018-11-14 03:45:48','47','<Blog: 测试>',1,'[{\"added\": {}}]',7,1),(228,'2018-11-14 03:47:59','47','<Blog: 测试>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(229,'2018-11-14 03:49:40','47','<Blog: 测试>',3,'',7,1),(230,'2018-11-14 03:50:52','41','<Blog: Pythonanywhere备份>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(231,'2018-11-14 11:14:06','48','<Blog: markdown里的表格怎么输入‘|’>',1,'[{\"added\": {}}]',7,1),(232,'2018-11-14 11:28:04','49','<Blog: Markdown页内跳转>',1,'[{\"added\": {}}]',7,1),(233,'2018-11-14 11:28:24','9','Markdown',1,'[{\"added\": {}}]',8,1),(234,'2018-11-14 11:29:39','39','<Blog: Markdown添加空格和空行>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(235,'2018-11-14 11:29:50','29','<Blog: Python浅拷贝和深拷贝>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(236,'2018-11-14 11:30:09','25','<Blog: Python的地址引用问题>',2,'[{\"changed\": {\"fields\": [\"content\", \"blog_type\"]}}]',7,1),(237,'2018-11-14 11:30:44','10','<Blog: strip()的用法>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(238,'2018-11-14 11:31:11','9','<Blog: model_class()方法详解>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(239,'2018-11-14 11:31:30','2','<Blog: 数量统计还有问题>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(240,'2018-11-14 11:31:49','3','<Blog: 关于DjangoForm的css样式>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(241,'2018-11-14 11:32:04','4','<Blog: 登陆跳转重定向回不到登陆前页面>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(242,'2018-11-14 11:32:26','5','<Blog: 缓存没用到>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(243,'2018-11-14 11:32:47','6','<Blog: exists()的作用是什么>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(244,'2018-11-14 11:33:07','7','<Blog: 登陆注册界面要改呀>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(245,'2018-11-14 11:33:26','8','<Blog: 登出方法设计>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(246,'2018-11-14 11:33:46','11','<Blog: 在Pythonanywhere上部署django>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(247,'2018-11-14 11:34:01','49','<Blog: Markdown页内跳转>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(248,'2018-11-14 11:34:11','48','<Blog: markdown里的表格怎么输入‘|’>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(249,'2018-11-14 11:34:44','26','<Blog: 多层创建文件路径>',2,'[{\"changed\": {\"fields\": [\"blog_type\"]}}]',7,1),(250,'2018-11-22 06:26:09','50','<Blog: 自我总结>',1,'[{\"added\": {}}]',7,1),(251,'2018-11-22 12:59:18','133','Comment object (133)',2,'[{\"changed\": {\"fields\": [\"comment_text\"]}}]',11,1),(252,'2018-11-23 12:00:02','50','<Blog: 自我总结>',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(253,'2018-11-29 08:41:07','51','<Blog: js零散笔记记录>',1,'[{\"added\": {}}]',7,1),(254,'2018-12-06 11:17:08','166','Comment object (166)',2,'[{\"changed\": {\"fields\": [\"comment_text\"]}}]',11,1),(255,'2018-12-08 03:08:09','173','Comment object (173)',2,'[{\"changed\": {\"fields\": [\"comment_text\"]}}]',11,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(7,'blog','blog'),(8,'blog','blog_type'),(11,'comment','comment'),(5,'contenttypes','contenttype'),(10,'data_statistics','read_detail'),(9,'data_statistics','read_num'),(6,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2018-09-08 01:39:28'),(2,'auth','0001_initial','2018-09-08 01:39:29'),(3,'admin','0001_initial','2018-09-08 01:39:29'),(4,'admin','0002_logentry_remove_auto_add','2018-09-08 01:39:29'),(5,'contenttypes','0002_remove_content_type_name','2018-09-08 01:39:29'),(6,'auth','0002_alter_permission_name_max_length','2018-09-08 01:39:29'),(7,'auth','0003_alter_user_email_max_length','2018-09-08 01:39:29'),(8,'auth','0004_alter_user_username_opts','2018-09-08 01:39:29'),(9,'auth','0005_alter_user_last_login_null','2018-09-08 01:39:29'),(10,'auth','0006_require_contenttypes_0002','2018-09-08 01:39:29'),(11,'auth','0007_alter_validators_add_error_messages','2018-09-08 01:39:29'),(12,'auth','0008_alter_user_username_max_length','2018-09-08 01:39:29'),(13,'auth','0009_alter_user_last_name_max_length','2018-09-08 01:39:29'),(14,'blog','0001_initial','2018-09-08 01:39:29'),(15,'blog','0002_auto_20180826_1403','2018-09-08 01:39:29'),(16,'blog','0003_auto_20180827_1427','2018-09-08 01:39:29'),(17,'comment','0001_initial','2018-09-08 01:39:29'),(18,'comment','0002_auto_20180907_1415','2018-09-08 01:39:29'),(19,'data_statistics','0001_initial','2018-09-08 01:39:29'),(20,'data_statistics','0002_read_detail','2018-09-08 01:39:29'),(21,'sessions','0001_initial','2018-09-08 01:39:29'),(22,'comment','0003_auto_20180910_1727','2018-09-10 09:27:51');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('114malc9anwx291xc0r8y7wwiatg1bqz','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-28 12:10:32'),('1s7mx8zw9vgw7hm2mcdf2k1d4xutggzn','NzMxNjUyYmQ0ZmQ5ZDNmZjJkZjY5N2I2OTk0ZDU2NTMwZDJjNGQ1ZDp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZDQ4ZTlkMWVhZTJhNmRjNjk0NjRkMzhkYTBmZTgzNTQwYjdhNjM4In0=','2018-11-03 14:20:51'),('35le0qxqp1t8sbdgf0e202lz09qsgeu5','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-15 16:58:55'),('5hdc89b0oykr6bwg8rscm5pr28lwcyzo','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-20 12:50:14'),('67erw2t037hyye8ecto5crlir7q2jhcd','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-06 07:46:50'),('7pqlhvexxuku576w85lqwv0sut2hmmat','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-12 06:57:22'),('8szr4plou34cnkekj7s1s2m2y7pqicnk','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-30 03:48:25'),('8wumzdls451kkji5uso36t5yladmgxcw','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-31 14:42:31'),('93a4zd1ob8i0sih70iv5z2uqykb99me8','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-28 01:13:41'),('agnr8j6qwdut4uxokn3sa53plzpibidk','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-10 01:08:38'),('bao3wpf1nf8tj7r8vw1iibfw75238w3m','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-11 13:16:22'),('bjm0znmfmz7nydrwe1st91avvcwpsuaa','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-30 01:30:08'),('cdlhqqhcvr7xdl52fd5m7m4bab4ypjgf','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-25 03:31:15'),('dg85zkjrx2ia1him2bpfeiys5d3k0tk2','NzMxNjUyYmQ0ZmQ5ZDNmZjJkZjY5N2I2OTk0ZDU2NTMwZDJjNGQ1ZDp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZDQ4ZTlkMWVhZTJhNmRjNjk0NjRkMzhkYTBmZTgzNTQwYjdhNjM4In0=','2018-12-11 05:13:56'),('ewbp1lse0254b22bbt694q53f5rs2blo','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-23 01:10:06'),('ewzl3jpborjngok0gmszy6vakh8ufrgy','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-02 01:36:49'),('f751qsl45f0kd2cxvwwjddtc9v5y8sb9','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-02 13:28:42'),('fyb9ntj7yibokppjejhb09lyuo4agilb','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-15 16:18:33'),('g4syyc4sn61znpod1m5lfh8tzpuw0t66','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-03 09:42:10'),('ge06hbmoln1evwu4aqge3c8570229n0z','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-22 03:12:36'),('gm7z5y3an29r5t3ygzejxc4cwsg1apil','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-14 08:56:39'),('hqvwmdpdvvfomy4cojcp8qe0lsprjvls','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-03 15:34:11'),('idh3u2qxhproz9e0u41b0hthbjv64r5a','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-07 02:36:52'),('ihfipn6lotzt84sktdb32ea3zxj6n18l','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-27 07:23:51'),('iihglqko8c9ltqeylxskhgqxq1lxedvv','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-03 04:07:09'),('j581qnyztnejjxtl38lrp03gzhfwx62f','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-08 14:26:35'),('j9zph9uy7jzusdksex6i0nid0w3lsm8e','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-24 02:09:13'),('jgu87va8e3h0tiepl5rwm3dhkrb8g3v2','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-30 08:37:21'),('jwte99ymexsps419lsjs0y8smf7eq8lu','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-24 09:10:57'),('k2qni9l6udbqvic4vd1p0u1khxa1t6kj','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-21 05:18:58'),('lzxzuiei108oyhsmf7ymhb5fv6km5zf7','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-03 04:11:01'),('m9iiwqgq878idc3k34ozh03shfmz22cd','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-12-20 03:32:31'),('mnw98r6eieep7lkp7dngvo8nv5dsmrk1','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-20 13:20:32'),('mqr7skg2qbtliwdppsz683ebtaf2nirm','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-24 09:32:31'),('mvh21hyvhjeok8rfpju9yfiylz3hqc5r','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-31 14:34:42'),('no79ezqzmfzo6804x6vtzsw5q5qsjp6p','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-26 05:31:24'),('nt2ciant7nxlusckfe3h6s5wqoas8ja0','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-07 02:24:43'),('o3uzctpgceskatmg1017vcrvqjxmm4x1','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-02 11:52:27'),('otl1he005yfdw0di57lbfluji6y5kg8e','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-19 06:26:35'),('qb6zycdmmnrjq50b9atyxjwfsx53kb9q','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-22 01:50:30'),('ro638k4ojfu07w2d42ojjxechoeka47p','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-24 08:56:43'),('seqid66xoroumnk891idy5n576j83kui','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-25 03:34:56'),('tvs76a5rsii1ttvacm95ewawb6mti546','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-24 10:20:08'),('u1z7h0o5g3roiu97akqqaj4afe4b7dn1','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-15 02:17:50'),('ux40pd1qdv3umdmuvk51854cnasqgw8t','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-06 06:35:20'),('vh57u20pv7zkbzmxxmnlcwgjb6xmej8o','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-10-20 05:01:22'),('w4cxuoce7rsypn969wh33gtmxqkp6md3','NzMxNjUyYmQ0ZmQ5ZDNmZjJkZjY5N2I2OTk0ZDU2NTMwZDJjNGQ1ZDp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiZDQ4ZTlkMWVhZTJhNmRjNjk0NjRkMzhkYTBmZTgzNTQwYjdhNjM4In0=','2018-11-03 14:35:31'),('wiuyyepluiaytpb0ygwejmcg60s8wa25','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-09-26 10:31:18'),('wq08cerioo21raqjyllwrkc2bejj73j7','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-28 01:50:09'),('wsem9nsvjtdu9lpqhaicg6u9zgw2mkg4','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-15 11:39:43'),('x8kpy2zrncn5xnzf56hwdnd0owby5343','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-09 03:21:04'),('ywb0ztd6uw7baz0jamyy423dja0e7whf','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-18 07:02:29'),('zg2u1b4pgs10yd97v0u987a15ru6wdxt','MzBmMmY1NzRkODNmZDFjMzQ0ZTNjZjYxOTBjMDMyNjQzYTZhMjRiNjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3ZjNkZGRlNDg2MzU4ZjllZmI4NDMyOGRjYjA0N2RkNjJmYjExNTU5In0=','2018-11-08 03:10:56');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-12-08  8:03:10
